<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>搭建 Fisco-BCOS 区块链系统</title>
      <link href="/posts/faca.html"/>
      <url>/posts/faca.html</url>
      
        <content type="html"><![CDATA[<h2 id="搭建-Fisco-BCOS-区块链系统"><a href="#搭建-Fisco-BCOS-区块链系统" class="headerlink" title="搭建 Fisco-BCOS 区块链系统"></a>搭建 Fisco-BCOS 区块链系统</h2><h3 id="1、环境基础要求"><a href="#1、环境基础要求" class="headerlink" title="1、环境基础要求"></a>1、环境基础要求</h3><h4 id="1-1、虚拟机配置"><a href="#1-1、虚拟机配置" class="headerlink" title="1.1、虚拟机配置"></a>1.1、虚拟机配置</h4><table><thead><tr><th align="center"></th><th align="center">配置</th></tr></thead><tbody><tr><td align="center">CPU</td><td align="center">8核</td></tr><tr><td align="center">内存</td><td align="center">8GB</td></tr><tr><td align="center">存储</td><td align="center">1TB</td></tr></tbody></table><p><strong>一切要上传的文件都是使用xshell、MobaXterm，SecureCRT或其他终端软件将所需的目录</strong></p><h4 id="1-2、配置网卡文件"><a href="#1-2、配置网卡文件" class="headerlink" title="1.2、配置网卡文件"></a>1.2、配置网卡文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=static  </span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=aebb66da-0559-4d35-a468-830b33c5e4bf</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes  </span><br><span class="line">IPADDR=192.168.10.8</span><br><span class="line">GATEWAY=192.168.10.2</span><br><span class="line">PREFIX=24</span><br><span class="line">DNS1=8.8.8.8</span><br><span class="line">DNS2=114.114.114.114</span><br><span class="line"></span><br><span class="line">检测能否ping通外网</span><br><span class="line">[root@localhost ~]# ping baidu.com</span><br><span class="line">PING baidu.com (39.156.66.10) 56(84) bytes of data.</span><br><span class="line">64 bytes from 39.156.66.10 (39.156.66.10): icmp_seq=1 ttl=128 time=49.7 ms</span><br><span class="line">64 bytes from 39.156.66.10 (39.156.66.10): icmp_seq=2 ttl=128 time=49.3 ms</span><br><span class="line">64 bytes from 39.156.66.10 (39.156.66.10): icmp_seq=3 ttl=128 time=50.9 ms</span><br><span class="line">^C</span><br><span class="line">--- baidu.com ping statistics ---</span><br><span class="line">3 packets transmitted, 3 received, 0% packet loss, time 2003ms</span><br><span class="line">rtt min/avg/max/mdev = 49.385/50.021/50.905/0.670 ms</span><br></pre></td></tr></table></figure><h4 id="1-3-配置yum源"><a href="#1-3-配置yum源" class="headerlink" title="1.3 配置yum源"></a>1.3 配置yum源</h4><p>使用xshell、MobaXterm，SecureCRT或其他终端软件连接到虚拟机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vi /etc/yum.repos.d/local.repo</span><br><span class="line">[centos]</span><br><span class="line">name=centos</span><br><span class="line">baseurl=file:///opt</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[root@localhost ~]#  mount /dev/cdrom /opt/</span><br><span class="line">mount: /dev/sr0 is write-protected, mounting read-only </span><br><span class="line"></span><br><span class="line">#将epel.repo上传到/etc/yum.repos.d/</span><br></pre></td></tr></table></figure><h3 id="2、搭建单群组FISCO-BCOS联盟链"><a href="#2、搭建单群组FISCO-BCOS联盟链" class="headerlink" title="2、搭建单群组FISCO BCOS联盟链"></a>2、搭建单群组FISCO BCOS联盟链</h3><h4 id="2-1、安装依赖"><a href="#2-1、安装依赖" class="headerlink" title="2.1、安装依赖"></a>2.1、安装依赖</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openssl openssl-devel</span><br><span class="line">yum install -y openssl curl wget git dos2unix vim python3-pip unzip nginx</span><br></pre></td></tr></table></figure><h4 id="2-2、Python-及相关库的安装"><a href="#2-2、Python-及相关库的安装" class="headerlink" title="2.2、Python 及相关库的安装"></a>2.2、Python 及相关库的安装</h4><p>安装 PyMySQL 库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# pip3 install PyMySQL</span><br><span class="line">WARNING: Running pip install with root privileges is generally not a good idea. Try `pip3 install --user` instead.</span><br><span class="line">Collecting PyMySQL</span><br><span class="line">  Downloading https://files.pythonhosted.org/packages/4f/52/a115fe175028b058df353c5a3d5290b71514a83f67078a6482cff24d6137/PyMySQL-1.0.2-py3-none-any.whl (43kB)</span><br><span class="line">    100% |████████████████████████████████| 51kB 194kB/s</span><br><span class="line">Installing collected packages: PyMySQL</span><br><span class="line">Successfully installed PyMySQL-1.0.2</span><br></pre></td></tr></table></figure><h4 id="2-3-安装-Java"><a href="#2-3-安装-Java" class="headerlink" title="2.3 安装 Java"></a>2.3 安装 Java</h4><p>将jdk-8u77-linux-x64.tar.gz上传到&#x2F;root</p><p>创建新的文件夹，安装 Java 8 或以上的版本，推荐 JDK 8 - JDK 13 版本，将下载的 jdk 放在 &#x2F;usr&#x2F;local 目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 解压jdk</span><br><span class="line"> tar -zxvf jdk-8u77-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">#修改解压后文件的文件名</span><br><span class="line">mv jdk1.8.0_77 jdk-8u77</span><br><span class="line"></span><br><span class="line"># 移动 JDK 包到 /usr/local 目录</span><br><span class="line">mv jdk-8u77 /usr/local </span><br><span class="line"></span><br><span class="line"># 配置Java环境，编辑/etc/profile文件</span><br><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line"># 打开以后将下面三句输入到文件里面并保存退出</span><br><span class="line">export JAVA_HOME=/usr/local/jdk-8u77  #这是一个文件目录，非文件</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"></span><br><span class="line"># 生效profile</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"># 查询Java版本，出现版本，则安装成功。</span><br><span class="line">[root@localhost ~]# java -version</span><br><span class="line">java version &quot;1.8.0_77&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_77-b03)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.77-b03, mixed mode)</span><br><span class="line">[root@localhost ~]# javac -version</span><br><span class="line">javac 1.8.0_77</span><br></pre></td></tr></table></figure><h4 id="2-4-安装数据库"><a href="#2-4-安装数据库" class="headerlink" title="2.4 安装数据库"></a>2.4 安装数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum install -y mariadb-server mariadb-client</span><br><span class="line">[root@localhost ~]# systemctl start mariadb</span><br><span class="line">[root@localhost ~]# systemctl enable mariadb</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/mariadb.service to /usr/lib/systemd/system/mariadb.service.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#对数据库进行初始化操作</span><br><span class="line">[root@localhost ~]# mysql_secure_installation</span><br><span class="line"></span><br><span class="line">NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB</span><br><span class="line">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class="line"></span><br><span class="line">In order to log into MariaDB to secure it, we&#x27;ll need the current</span><br><span class="line">password for the root user.  If you&#x27;ve just installed MariaDB, and</span><br><span class="line">you haven&#x27;t set the root password yet, the password will be blank,</span><br><span class="line">so you should just press enter here.</span><br><span class="line"></span><br><span class="line">Enter current password for root (enter for none):  &lt;–-初次运行直接回车</span><br><span class="line">OK, successfully used password, moving on...</span><br><span class="line"></span><br><span class="line">Setting the root password ensures that nobody can log into the MariaDB</span><br><span class="line">root user without the proper authorisation.</span><br><span class="line"></span><br><span class="line">Set root password? [Y/n] //是否设置root用户密码，输入Y并回车或直接回车</span><br><span class="line">New password:    //设置root用户的密码</span><br><span class="line">Re-enter new password:  //再次输入你设置的密码</span><br><span class="line">Password updated successfully!</span><br><span class="line">Reloading privilege tables..</span><br><span class="line"> ... Success!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">By default, a MariaDB installation has an anonymous user, allowing anyone</span><br><span class="line">to log into MariaDB without having to have a user account created for</span><br><span class="line">them.  This is intended only for testing, and to make the installation</span><br><span class="line">go a bit smoother.  You should remove them before moving into a</span><br><span class="line">production environment.</span><br><span class="line"></span><br><span class="line">Remove anonymous users? [Y/n] //是否删除匿名用户,生产环境建议删除，所以直接回车</span><br><span class="line"> ... Success!</span><br><span class="line"></span><br><span class="line">Normally, root should only be allowed to connect from &#x27;localhost&#x27;.  This</span><br><span class="line">ensures that someone cannot guess at the root password from the network.</span><br><span class="line"></span><br><span class="line">Disallow root login remotely? [Y/n] n //是否禁止root远程登录</span><br><span class="line"> ... skipping.</span><br><span class="line"></span><br><span class="line">By default, MariaDB comes with a database named &#x27;test&#x27; that anyone can</span><br><span class="line">access.  This is also intended only for testing, and should be removed</span><br><span class="line">before moving into a production environment.</span><br><span class="line"></span><br><span class="line">Remove test database and access to it? [Y/n] //是否删除test数据库,直接回车</span><br><span class="line"> - Dropping test database...</span><br><span class="line"> ... Success!</span><br><span class="line"> - Removing privileges on test database...</span><br><span class="line"> ... Success!</span><br><span class="line"></span><br><span class="line">Reloading the privilege tables will ensure that all changes made so far</span><br><span class="line">will take effect immediately.</span><br><span class="line"></span><br><span class="line">Reload privilege tables now? [Y/n]  //是否重新加载权限表，直接回车</span><br><span class="line"> ... Success!</span><br><span class="line"></span><br><span class="line">Cleaning up...</span><br><span class="line"></span><br><span class="line">All done!  If you&#x27;ve completed all of the above steps, your MariaDB</span><br><span class="line">installation should now be secure.</span><br><span class="line"></span><br><span class="line">Thanks for using MariaDB!</span><br></pre></td></tr></table></figure><p>用 root 账户 登录 MySQL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p -h localhost -P 3306</span><br></pre></td></tr></table></figure><p>授权root用户远程访问 与 创建test用户并授权本地访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mysql -u root -p -h localhost -P 3306</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 73</span><br><span class="line">Server version: 5.5.68-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27; WITH GRANT OPTION;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; GRANT ALL PRIVILEGES ON *.* TO &#x27;test&#x27;@localhost IDENTIFIED BY &#x27;123456&#x27; WITH GRANT OPTION;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; flush PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; create database webasenodemanager;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">MariaDB [(none)]&gt; exit</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure><h3 id="3、搭建单群组4节点联盟链"><a href="#3、搭建单群组4节点联盟链" class="headerlink" title="3、搭建单群组4节点联盟链"></a>3、搭建单群组4节点联盟链</h3><h4 id="3-1、创建操作目录"><a href="#3-1、创建操作目录" class="headerlink" title="3.1、创建操作目录"></a>3.1、创建操作目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~ &amp;&amp; mkdir -p fisco &amp;&amp; cd fisco</span><br></pre></td></tr></table></figure><p><strong>上传脚本build_chain.sh到 &#x2F;root&#x2F;fisco目录</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x build_chain.sh   #添加权限</span><br></pre></td></tr></table></figure><h4 id="3-2、搭建单群组4节点联盟链"><a href="#3-2、搭建单群组4节点联盟链" class="headerlink" title="3.2、搭建单群组4节点联盟链"></a>3.2、搭建单群组4节点联盟链</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">bash build_chain.sh -l 127.0.0.1:4 -p 30300,20200,8545</span><br><span class="line"></span><br><span class="line">#命令执行成功会输出`All completed`。如果执行出错，请检查`nodes/build.log`文件中的错误信息</span><br><span class="line">[INFO] Downloading fisco-bcos binary from https://github.com/FISCO-BCOS/FISCO-BCOS/releases/download/v2.9.1/fisco-bcos.tar.gz ...</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==============================================================</span><br><span class="line">Generating CA key...</span><br><span class="line">==============================================================</span><br><span class="line">Generating keys and certificates ...</span><br><span class="line">Processing IP=127.0.0.1 Total=4 Agency=agency Groups=1</span><br><span class="line">==============================================================</span><br><span class="line">Generating configuration files ...</span><br><span class="line">Processing IP=127.0.0.1 Total=4 Agency=agency Groups=1</span><br><span class="line">==============================================================</span><br><span class="line">[INFO] Start Port      : 30300 20200 8545</span><br><span class="line">[INFO] Server IP       : 127.0.0.1:4</span><br><span class="line">[INFO] Output Dir      : /root/fisco/nodes</span><br><span class="line">[INFO] CA Path         : /root/fisco/nodes/cert/</span><br><span class="line">[INFO] RSA channel     : true</span><br><span class="line">==============================================================</span><br><span class="line">[INFO] Execute the download_console.sh script in directory named by IP to get FISCO-BCOS console.</span><br><span class="line">e.g.  bash /root/fisco/nodes/127.0.0.1/download_console.sh -f</span><br><span class="line">==============================================================</span><br><span class="line">[INFO] All completed. Files in /root/fisco/nodes</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">## 启动所有节点</span><br><span class="line">bash ~/fisco/nodes/127.0.0.1/start_all.sh</span><br><span class="line"></span><br><span class="line">#启动成功会输出类似下面内容的响应。否则请使用netstat -an | grep tcp检查机器的30300~30303，20200~20203，8545~8548端口是否被占用。</span><br><span class="line">try to start node0</span><br><span class="line">try to start node1</span><br><span class="line">try to start node2</span><br><span class="line">try to start node3</span><br><span class="line"> node1 start successfully</span><br><span class="line"> node2 start successfully</span><br><span class="line"> node0 start successfully</span><br><span class="line"> node3 start successfully</span><br><span class="line"></span><br><span class="line">## *关闭所有节点</span><br><span class="line">bash ~/fisco/nodes/127.0.0.1/stop_all.sh</span><br></pre></td></tr></table></figure><h4 id="3-3-检查进程"><a href="#3-3-检查进程" class="headerlink" title="3.3 检查进程"></a>3.3 检查进程</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep -v grep | grep fisco-bcos</span><br><span class="line"></span><br><span class="line">#正常情况会有类似下面的输出； 如果进程数不为4，则进程没有启动（一般是端口被占用导致的）</span><br><span class="line">root      27674      1  1 12:13 pts/1    00:00:00 /root/fisco/nodes/127.0.0.1/node0/../fis                                                                                                                    co-bcos -c config.ini</span><br><span class="line">root      27675      1  1 12:13 pts/1    00:00:00 /root/fisco/nodes/127.0.0.1/node1/../fis                                                                                                                    co-bcos -c config.ini</span><br><span class="line">root      27676      1  1 12:13 pts/1    00:00:00 /root/fisco/nodes/127.0.0.1/node3/../fis                                                                                                                    co-bcos -c config.ini</span><br><span class="line">root      27677      1  1 12:13 pts/1    00:00:00 /root/fisco/nodes/127.0.0.1/node2/../fis                                                                                                                    co-bcos -c config.ini</span><br></pre></td></tr></table></figure><h4 id="3-4、检查日志输出"><a href="#3-4、检查日志输出" class="headerlink" title="3.4、检查日志输出"></a>3.4、检查日志输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">查看节点node0链接的节点数</span><br><span class="line">tail -f nodes/127.0.0.1/node0/log/log*  | grep connected</span><br><span class="line"></span><br><span class="line">#正常情况会不停地输出连接信息，从输出可以看出node0与另外3个节点有连接。</span><br><span class="line">info|2019-01-21 17:30:58.316769| [P2P][Service] heartBeat,connected count=3</span><br><span class="line">info|2019-01-21 17:31:08.316922| [P2P][Service] heartBeat,connected count=3</span><br><span class="line">info|2019-01-21 17:31:18.317105| [P2P][Service] heartBeat,connected count=3</span><br><span class="line"></span><br><span class="line">执行下面指令，检查是否在共识</span><br><span class="line">tail -f nodes/127.0.0.1/node0/log/log*  | grep +++</span><br><span class="line"></span><br><span class="line">#正常情况会不停输出++++Generating seal，表示共识正常。</span><br><span class="line">info|2020-12-22 17:24:43.729402|[g:1][CONSENSUS][SEALER]++++++++++++++++ Generating seal on,blkNum=1,tx=0,nodeIdx=1,hash=2e133146...</span><br><span class="line">info|2020-12-22 17:24:47.740603|[g:1][CONSENSUS][SEALER]++++++++++++++++ Generating seal on,blkNum=1,tx=0,nodeIdx=1,hash=eb199760...</span><br></pre></td></tr></table></figure><h3 id="4、配置及使用控制台"><a href="#4、配置及使用控制台" class="headerlink" title="4、配置及使用控制台"></a>4、配置及使用控制台</h3><h4 id="4-1-获取控制台"><a href="#4-1-获取控制台" class="headerlink" title="4.1 获取控制台"></a>4.1 获取控制台</h4><p><strong>将console上传到&#x2F;root&#x2F;fisco目录</strong></p><h4 id="4-1-拷贝配置文件与证书"><a href="#4-1-拷贝配置文件与证书" class="headerlink" title="4.1 拷贝配置文件与证书"></a>4.1 拷贝配置文件与证书</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -n ~/fisco/console/conf/config-example.toml ~/fisco/console/conf/config.toml</span><br><span class="line">cp -r ~/fisco/nodes/127.0.0.1/sdk/* ~/fisco/console/conf/</span><br></pre></td></tr></table></figure><h4 id="4-2-启动控制台"><a href="#4-2-启动控制台" class="headerlink" title="4.2 启动控制台"></a>4.2 启动控制台</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">bash ~/fisco/console/start.sh</span><br><span class="line">#输出下述信息表明启动成功 否则请检查conf/config.toml中节点端口配置是否正确</span><br><span class="line">[root@localhost fisco]# bash ~/fisco/console/start.sh</span><br><span class="line">=============================================================================================</span><br><span class="line">Welcome to FISCO BCOS console(2.9.2)!</span><br><span class="line">Type &#x27;help&#x27; or &#x27;h&#x27; for help. Type &#x27;quit&#x27; or &#x27;q&#x27; to quit console.</span><br><span class="line"> ________ ______  ______   ______   ______       _______   ______   ______   ______</span><br><span class="line">|        |      \/      \ /      \ /      \     |       \ /      \ /      \ /      \</span><br><span class="line">| $$$$$$$$\$$$$$|  $$$$$$|  $$$$$$|  $$$$$$\    | $$$$$$$|  $$$$$$|  $$$$$$|  $$$$$$\</span><br><span class="line">| $$__     | $$ | $$___\$| $$   \$| $$  | $$    | $$__/ $| $$   \$| $$  | $| $$___\$$</span><br><span class="line">| $$  \    | $$  \$$    \| $$     | $$  | $$    | $$    $| $$     | $$  | $$\$$    \</span><br><span class="line">| $$$$$    | $$  _\$$$$$$| $$   __| $$  | $$    | $$$$$$$| $$   __| $$  | $$_\$$$$$$\</span><br><span class="line">| $$      _| $$_|  \__| $| $$__/  | $$__/ $$    | $$__/ $| $$__/  | $$__/ $|  \__| $$</span><br><span class="line">| $$     |   $$ \\$$    $$\$$    $$\$$    $$    | $$    $$\$$    $$\$$    $$\$$    $$</span><br><span class="line"> \$$      \$$$$$$ \$$$$$$  \$$$$$$  \$$$$$$      \$$$$$$$  \$$$$$$  \$$$$$$  \$$$$$$</span><br><span class="line"></span><br><span class="line">=============================================================================================</span><br><span class="line">[group:1]&gt;</span><br></pre></td></tr></table></figure><h3 id="5、-配置-WeBase"><a href="#5、-配置-WeBase" class="headerlink" title="5、 配置 WeBase"></a>5、 配置 WeBase</h3><h4 id="5-1-将webase-deploy-zip上传到-x2F-root-x2F-fisco-x2F"><a href="#5-1-将webase-deploy-zip上传到-x2F-root-x2F-fisco-x2F" class="headerlink" title="5.1 将webase-deploy.zip上传到&#x2F;root&#x2F;fisco&#x2F;"></a>5.1 将webase-deploy.zip上传到&#x2F;root&#x2F;fisco&#x2F;</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root/fisco/</span><br><span class="line">unzip webase-deploy.zip</span><br></pre></td></tr></table></figure><h4 id="5-2-修改-common-properties"><a href="#5-2-修改-common-properties" class="headerlink" title="5.2 修改 common.properties"></a>5.2 修改 common.properties</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">vi webase-deploy/common.properties</span><br><span class="line"></span><br><span class="line"># ----------common.properties内容如下：</span><br><span class="line"></span><br><span class="line"># WeBASE子系统的最新版本(v1.1.0或以上版本)</span><br><span class="line">webase.web.version=v1.5.3</span><br><span class="line">webase.mgr.version=v1.5.3</span><br><span class="line">webase.sign.version=v1.5.3</span><br><span class="line">webase.front.version=v1.5.3</span><br><span class="line"></span><br><span class="line">#####################################################################</span><br><span class="line">## 使用Docker启用Mysql服务，则需要配置以下值</span><br><span class="line"></span><br><span class="line"># 1: enable mysql in docker</span><br><span class="line"># 0: mysql run in host, required fill in the configuration of webase-node-mgr and webase-sign</span><br><span class="line">docker.mysql=1</span><br><span class="line"></span><br><span class="line"># if [docker.mysql=1], mysql run in host (only works in [installDockerAll])</span><br><span class="line"># run mysql 5.6 by docker</span><br><span class="line">docker.mysql.port=23306</span><br><span class="line"># default user [root]</span><br><span class="line">docker.mysql.password=123456</span><br><span class="line"></span><br><span class="line">#####################################################################</span><br><span class="line">## 不使用Docker启动Mysql，则需要配置以下值</span><br><span class="line"></span><br><span class="line"># 节点管理子系统mysql数据库配置</span><br><span class="line">mysql.ip=127.0.0.1</span><br><span class="line">mysql.port=3306</span><br><span class="line">mysql.user=root                  &lt;-------这里要改</span><br><span class="line">mysql.password=dbPassword              &lt;-------这里要改</span><br><span class="line">mysql.database=webasenodemanager</span><br><span class="line"></span><br><span class="line"># 签名服务子系统mysql数据库配置</span><br><span class="line">sign.mysql.ip=localhost</span><br><span class="line">sign.mysql.port=3306</span><br><span class="line">sign.mysql.user=root                  &lt;-------这里要改</span><br><span class="line">sign.mysql.password=dbPassword              &lt;-------这里要改</span><br><span class="line">sign.mysql.database=webasesign</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 节点前置子系统h2数据库名和所属机构</span><br><span class="line">front.h2.name=webasefront</span><br><span class="line">front.org=fisco</span><br><span class="line"></span><br><span class="line"># WeBASE管理平台服务端口</span><br><span class="line">web.port=5000</span><br><span class="line"># 启用移动端管理平台 (0: disable, 1: enable)</span><br><span class="line">web.h5.enable=1</span><br><span class="line"></span><br><span class="line"># 节点管理子系统服务端口</span><br><span class="line">mgr.port=5001</span><br><span class="line"># 节点前置子系统端口</span><br><span class="line">front.port=5002</span><br><span class="line"># 签名服务子系统端口</span><br><span class="line">sign.port=5004</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 节点监听Ip </span><br><span class="line">node.listenIp=127.0.0.1</span><br><span class="line"># 节点p2p端口</span><br><span class="line">node.p2pPort=30300</span><br><span class="line"># 节点链上链下端口</span><br><span class="line">node.channelPort=20200</span><br><span class="line"># 节点rpc端口</span><br><span class="line">node.rpcPort=8545</span><br><span class="line"></span><br><span class="line"># 加密类型 (0: ECDSA算法, 1: 国密算法)</span><br><span class="line">encrypt.type=0</span><br><span class="line"># SSL连接加密类型 (0: ECDSA SSL, 1: 国密SSL)</span><br><span class="line"># 只有国密链才能使用国密SSL</span><br><span class="line">encrypt.sslType=0</span><br><span class="line"></span><br><span class="line"># 是否使用已有的链（yes/no） 由于已经有链了，所以这里改成yes</span><br><span class="line">if.exist.fisco=yes              &lt;-------这里要改</span><br><span class="line"></span><br><span class="line"># 使用已有链时需配置</span><br><span class="line"># 已有链的路径，start_all.sh脚本所在路径  改成之前部署的链地址，注意需要是从根目录开始的地址，不能从~开始</span><br><span class="line"># 路径下要存在sdk目录（sdk目录中包含了SSL所需的证书，即ca.crt、sdk.crt、sdk.key和gm目录（包含国密SSL证书，gmca.crt、gmsdk.crt、gmsdk.key、gmensdk.crt和gmensdk.key）</span><br><span class="line">fisco.dir=/root/fisco/nodes/127.0.0.1            &lt;-------这里要改</span><br><span class="line"># 前置所连接节点，在127.0.0.1目录中的节点中的一个</span><br><span class="line"># 节点路径下要存在conf文件夹，conf里存放节点证书（ca.crt、node.crt和node.key）</span><br><span class="line">node.dir=node0</span><br><span class="line"></span><br><span class="line"># 搭建新链时需配置</span><br><span class="line"># FISCO-BCOS版本</span><br><span class="line">fisco.version=2.7.2</span><br><span class="line"># 搭建节点个数（默认两个）</span><br><span class="line">node.counts=nodeCounts</span><br></pre></td></tr></table></figure><p>部署并启动所有服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cd /root/fisco/webase-deploy/ &amp;&amp; python3 deploy.py installAll</span><br></pre></td></tr></table></figure><p>注意这里要都选y</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WeBASE-Sign database webasesign already exists. Do you want drop and recreate it?[y/n]y</span><br><span class="line">WeBASE-Front database webasefront already exists, rebuild or not?[y/n]:y</span><br></pre></td></tr></table></figure><p>服务部署后，需要对各服务进行启停操作，可以使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 一键部署</span><br><span class="line">部署并启动所有服务        python3 deploy.py installAll</span><br><span class="line">停止一键部署的所有服务    python3 deploy.py stopAll</span><br><span class="line">启动一键部署的所有服务    python3 deploy.py startAll</span><br><span class="line"># 各子服务启停</span><br><span class="line">启动FISCO-BCOS节点:      python3 deploy.py startNode</span><br><span class="line">停止FISCO-BCOS节点:      python3 deploy.py stopNode</span><br><span class="line">启动WeBASE-Web:          python3 deploy.py startWeb</span><br><span class="line">停止WeBASE-Web:          python3 deploy.py stopWeb</span><br><span class="line">启动WeBASE-Node-Manager: python3 deploy.py startManager</span><br><span class="line">停止WeBASE-Node-Manager: python3 deploy.py stopManager</span><br><span class="line">启动WeBASE-Sign:        python3 deploy.py startSign</span><br><span class="line">停止WeBASE-Sign:        python3 deploy.py stopSign</span><br><span class="line">启动WeBASE-Front:        python3 deploy.py startFront</span><br><span class="line">停止WeBASE-Front:        python3 deploy.py stopFront</span><br><span class="line"># 可视化部署</span><br><span class="line">部署并启动可视化部署的所有服务  python3 deploy.py installWeBASE</span><br><span class="line">停止可视化部署的所有服务  python3 deploy.py stopWeBASE</span><br><span class="line">启动可视化部署的所有服务  python3 deploy.py startWeBASE</span><br></pre></td></tr></table></figure><h4 id="5-3-WeBASE管理平台的访问："><a href="#5-3-WeBASE管理平台的访问：" class="headerlink" title="5.3 WeBASE管理平台的访问："></a>5.3 WeBASE管理平台的访问：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://&#123;deployIP&#125;:&#123;webPort&#125;</span><br><span class="line">示例：http://localhost:5000</span><br></pre></td></tr></table></figure><p>初始默认的账户名是admin，密码是Abcd1234。（第一次登陆后会提示修改密码）</p><h3 id="6、-部署HelloWorld合约"><a href="#6、-部署HelloWorld合约" class="headerlink" title="6、 部署HelloWorld合约"></a>6、 部署HelloWorld合约</h3><p>HelloWorld合约提供两个接口，分别是<code>get()</code>和<code>set()</code>，用于获取&#x2F;设置合约变量<code>name</code>。合约内容如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^0.4.24;</span><br><span class="line"></span><br><span class="line">contract HelloWorld &#123;</span><br><span class="line">    string name;</span><br><span class="line"></span><br><span class="line">    function HelloWorld() &#123;</span><br><span class="line">        name = &quot;Hello, World!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function get()constant returns(string) &#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function set(string n) &#123;</span><br><span class="line">        name = n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-1-部署HelloWorld合约"><a href="#6-1-部署HelloWorld合约" class="headerlink" title="6.1 部署HelloWorld合约"></a>6.1 部署HelloWorld合约</h3><p>为了方便用户快速体验，HelloWorld合约已经内置于控制台中，位于控制台目录下<code>contracts/solidity/HelloWorld.sol</code>，参考下面命令部署即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在控制台输入以下指令 部署成功则返回合约地址</span><br><span class="line">[group:1]&gt; deploy HelloWorld</span><br><span class="line">transaction hash: 0xd0305411e36d2ca9c1a4df93e761c820f0a464367b8feb9e3fa40b0f68eb23fa</span><br><span class="line">contract address:0xb3c223fc0bf6646959f254ac4e4a7e355b50a344</span><br></pre></td></tr></table></figure><h4 id="6-2-调用HelloWorld合约"><a href="#6-2-调用HelloWorld合约" class="headerlink" title="6.2 调用HelloWorld合约"></a>6.2 调用HelloWorld合约</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前块高</span><br><span class="line">[group:1]&gt; getBlockNumber</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line"># 调用get接口获取name变量 此处的合约地址是deploy指令返回的地址</span><br><span class="line">[group:1]&gt; call HelloWorld 0xb3c223fc0bf6646959f254ac4e4a7e355b50a344 get</span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line">Return code: 0</span><br><span class="line">description: transaction executed successfully</span><br><span class="line">Return message: Success</span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line">Return values:</span><br><span class="line">[</span><br><span class="line">    &quot;Hello,World!&quot;</span><br><span class="line">]</span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># 查看当前块高，块高不变，因为get接口不更改账本状态</span><br><span class="line">[group:1]&gt; getBlockNumber</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line"># 调用set设置name</span><br><span class="line">[group:1]&gt; call HelloWorld 0xb3c223fc0bf6646959f254ac4e4a7e355b50a344 set &quot;Hello, FISCO BCOS&quot;</span><br><span class="line">transaction hash: 0x7e742c44091e0d6e4e1df666d957d123116622ab90b718699ce50f54ed791f6e</span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line">transaction status: 0x0</span><br><span class="line">description: transaction executed successfully</span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line">Output</span><br><span class="line">Receipt message: Success</span><br><span class="line">Return message: Success</span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line">Event logs</span><br><span class="line">Event: &#123;&#125;</span><br><span class="line"></span><br><span class="line"># 再次查看当前块高，块高增加表示已出块，账本状态已更改</span><br><span class="line">[group:1]&gt; getBlockNumber</span><br><span class="line">2</span><br><span class="line"></span><br><span class="line"># 调用get接口获取name变量，检查设置是否生效</span><br><span class="line">[group:1]&gt; call HelloWorld 0xb3c223fc0bf6646959f254ac4e4a7e355b50a344 get</span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line">Return code: 0</span><br><span class="line">description: transaction executed successfully</span><br><span class="line">Return message: Success</span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line">Return values:</span><br><span class="line">[</span><br><span class="line">    &quot;Hello,FISCO BCOS&quot;</span><br><span class="line">]</span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># 退出控制台</span><br><span class="line">[group:1]&gt; quit</span><br></pre></td></tr></table></figure><p>参考文献：</p><p><a href="http://www.vianao.top/posts/faca.html">http://www.vianao.top/posts/faca.html</a></p><p><a href="https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/installation.html#fisco-bcos">https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/installation.html#fisco-bcos</a></p><p><a href="https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/webase/webase.html">https://fisco-bcos-documentation.readthedocs.io/zh_CN/latest/docs/webase/webase.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建博客</title>
      <link href="/posts/21ad.html"/>
      <url>/posts/21ad.html</url>
      
        <content type="html"><![CDATA[<h3 id="配置阿里网络源"><a href="#配置阿里网络源" class="headerlink" title="配置阿里网络源"></a>配置阿里网络源</h3><p>删除centos7自带的yum源文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /etc/yum.repos.d/*</span><br></pre></td></tr></table></figure><p>将CentOS-Base.repo和epel.repo上传到root目录下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /root/CentOS-Base.repo /etc/yum.repos.d/</span><br><span class="line"><span class="built_in">mv</span> /root/epel.repo /etc/yum.repos.d/</span><br><span class="line">yum repolist</span><br></pre></td></tr></table></figure><h3 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h3><p> 执行如下命令，安装Apache服务及其扩展包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install httpd mod_ssl mod_perl mod_auth_mysql</span><br></pre></td></tr></table></figure><p>执行如下命令，查看Apache是否安装成功。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd -v</span><br></pre></td></tr></table></figure><p>返回结果如下所示，表示您已成功安装Apache。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# httpd -v</span><br><span class="line">Server version: Apache/2.4.6 (CentOS)</span><br><span class="line">Server built:   Apr  5 2023 17:18:30</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><p>执行如下命令，启动Apache服务。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd.service</span><br></pre></td></tr></table></figure><p>关闭防火墙和临时关闭seliunx</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p>浏览器的址栏中，访问http:&#x2F;&#x2F;&lt;ip地址&gt;</p><p><img src="https://img01.anzhiy.cn/useruploads/0/2023/04/20/644130d2dcd6c.png" alt="QQ截图2023042020sa145as"></p><p>若返回页面如下图所示，说明Apache服务启动成功。</p><h3 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mariadb-server</span><br></pre></td></tr></table></figure><p>启动MariaDB Server</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb</span><br></pre></td></tr></table></figure><p>执行如下命令，查看MariaDB Server运行状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mariadb</span><br></pre></td></tr></table></figure><p>执行如下命令，设置数据库root用户的初始密码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root -p password</span><br></pre></td></tr></table></figure><p>返回如下结果，由于您是第一次设置数据库密码，因此在出现Enter Password提示符的时，直接回车即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mysqladmin -u root -p password</span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure><p>返回如下结果，输入新密码为123456789，回车后再次输入123456789即可。（输入的密码不会显示出来，这是正常的，没有出错）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mysqladmin -u root -p password</span></span><br><span class="line">Enter password:</span><br><span class="line">New password:</span><br><span class="line">Confirm new password:</span><br></pre></td></tr></table></figure><p>执行如下命令，连接数据库并赋予权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p123456789</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mysql -uroot -p123456789</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 3</span><br><span class="line">Server version: 5.5.68-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; create database wordpress;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| test               |</span><br><span class="line">| wordpress          |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on *.* to root@localhost identified by &#x27;123456789&#x27; with grant option;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on *.* to root@&quot;%&quot; identified by &#x27;123456789&#x27; with grant option;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; exit;</span><br><span class="line">Bye</span><br><span class="line">[root@localhost ~]#</span><br></pre></td></tr></table></figure><h3 id="安装php"><a href="#安装php" class="headerlink" title="安装php"></a>安装php</h3><p>PHP是一种广泛使用的通用开源脚本语言，适合于Web网站开发，它可以嵌入HTML中</p><p>执行如下命令，安装PHP。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install php php-mysql gd php-gd gd-devel php-xml php-common php-mbstring php-ldap php-pear php-xmlrpc php-imap</span><br></pre></td></tr></table></figure><p>执行如下命令，创建PHP测试页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&lt;?php phpinfo(); ?&gt;&quot; &gt; /var/www/html/phpinfo.php</span><br></pre></td></tr></table></figure><p>执行如下命令，重启Apache服务。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><p>在浏览器的地址栏中，访问http:&#x2F;&#x2F;&lt;ip地址&gt;&#x2F;phpinfo.php</p><p><img src="https://img01.anzhiy.cn/useruploads/0/2023/04/20/644130d20fdab.png" alt="QQ截图20230420201845as"></p><h3 id="安装和配置WordPress"><a href="#安装和配置WordPress" class="headerlink" title="安装和配置WordPress"></a>安装和配置WordPress</h3><p>执行如下命令，安装WordPress。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wordpress</span><br></pre></td></tr></table></figure><p>修改WordPress配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 进入/usr/share/wordpress目录。</span><br><span class="line">cd /usr/share/wordpress</span><br><span class="line"># 修改路径。</span><br><span class="line">ln -snf /etc/wordpress/wp-config.php wp-config.php</span><br><span class="line"># 查看修改后的目录结构</span><br></pre></td></tr></table></figure><p>执行如下命令，移动wordpress文件到Apache根目录。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/share/wordpress/* /var/www/html/</span><br></pre></td></tr></table></figure><p>修改wp-config.php配置文件</p><p>原wp-config.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">// ** MySQL settings - You can get this info from your web host ** //</span><br><span class="line">/** The name of the database for WordPress */</span><br><span class="line">define( &#x27;DB_NAME&#x27;, &#x27;database_name_here&#x27; );</span><br><span class="line"></span><br><span class="line">/** MySQL database username */</span><br><span class="line">define( &#x27;DB_USER&#x27;, &#x27;username_here&#x27; );</span><br><span class="line"></span><br><span class="line">/** MySQL database password */</span><br><span class="line">define( &#x27;DB_PASSWORD&#x27;, &#x27;password_here&#x27; );</span><br><span class="line"></span><br><span class="line">/** MySQL hostname */</span><br><span class="line">define( &#x27;DB_HOST&#x27;, &#x27;localhost&#x27; );</span><br><span class="line"></span><br><span class="line">/** Database Charset to use in creating database tables. */</span><br><span class="line">define( &#x27;DB_CHARSET&#x27;, &#x27;utf8&#x27; );</span><br><span class="line"></span><br><span class="line">/** The Database Collate type. Don&#x27;t change this if in doubt. */</span><br><span class="line">define( &#x27;DB_COLLATE&#x27;, &#x27;&#x27; );</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /var/www/html/wp-config.php</span><br></pre></td></tr></table></figure><p>修改后wp-config.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">// ** MySQL settings - You can get this info from your web host ** //</span><br><span class="line">/** The name of the database for WordPress */</span><br><span class="line">define( &#x27;DB_NAME&#x27;, &#x27;wordpress&#x27; );</span><br><span class="line"></span><br><span class="line">/** MySQL database username */</span><br><span class="line">define( &#x27;DB_USER&#x27;, &#x27;root&#x27; );</span><br><span class="line"></span><br><span class="line">/** MySQL database password */</span><br><span class="line">define( &#x27;DB_PASSWORD&#x27;, &#x27;123456789&#x27; );</span><br><span class="line"></span><br><span class="line">/** MySQL hostname */</span><br><span class="line">define( &#x27;DB_HOST&#x27;, &#x27;localhost&#x27; );</span><br><span class="line"></span><br><span class="line">/** Database Charset to use in creating database tables. */</span><br><span class="line">define( &#x27;DB_CHARSET&#x27;, &#x27;utf8&#x27; );</span><br><span class="line"></span><br><span class="line">/** The Database Collate type. Don&#x27;t change this if in doubt. */</span><br><span class="line">define( &#x27;DB_COLLATE&#x27;, &#x27;&#x27; );</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>执行如下命令，重启Apache服务。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><h3 id="测试WordPress"><a href="#测试WordPress" class="headerlink" title="测试WordPress"></a>测试WordPress</h3><p>在浏览器地址栏中，访问http:&#x2F;&#x2F;&lt;ip地址&gt;&#x2F;</p><p><img src="https://img01.anzhiy.cn/useruploads/0/2023/04/20/644130d20b331.png" alt="QQ截图20230420201845"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔迹 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>基于docker-compose编排部署微服务快速开发框架</title>
      <link href="/posts/74d3.html"/>
      <url>/posts/74d3.html</url>
      
        <content type="html"><![CDATA[<h2 id="案例实施"><a href="#案例实施" class="headerlink" title="案例实施"></a>案例实施</h2><h3 id="1-基础环境准备"><a href="#1-基础环境准备" class="headerlink" title="1. 基础环境准备"></a>1. 基础环境准备</h3><h4 id="（1）导入软件包"><a href="#（1）导入软件包" class="headerlink" title="（1）导入软件包"></a>（1）导入软件包</h4><p>下载并解压软件包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# wget http://mirrors.douxuedu.com/competition/Pig.tar.gz</span><br><span class="line">[root@master ~]# tar -xf Pig.tar.gz</span><br><span class="line">[root@master ~]# ll Pig</span><br><span class="line">total 206752</span><br><span class="line">-rw------- 1 root root 211696640 Jan 12 17:24 CentOS_7.9.2009.tar</span><br><span class="line">drwxr-xr-x 2 root root        85 Jan  5 08:58 mysql</span><br><span class="line">drwxr-xr-x 3 root root        37 Jan  5 08:56 nginx</span><br><span class="line">drwxr-xr-x 2 root root        97 Jan  5 08:56 service</span><br><span class="line">drwxr-xr-x 3 root root     12288 Jan  5 08:56 yum</span><br><span class="line">导入CentOS:7.9.2009镜像：</span><br><span class="line"></span><br><span class="line">[root@master ~]# docker load -i Pig/CentOS_7.9.2009.tar </span><br><span class="line">Loaded image: centos:centos7.9.2009</span><br></pre></td></tr></table></figure><h4 id="（2）启动Kubernetes集群"><a href="#（2）启动Kubernetes集群" class="headerlink" title="（2）启动Kubernetes集群"></a>（2）启动Kubernetes集群</h4><p>初始化Kubernetes集群：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# init-cluster</span><br><span class="line">查看集群状态：</span><br><span class="line"></span><br><span class="line">[root@master ~]# kubectl cluster-info</span><br><span class="line">Kubernetes control plane is running at https://apiserver.cluster.local:6443</span><br><span class="line">CoreDNS is running at https://apiserver.cluster.local:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</span><br><span class="line"></span><br><span class="line">To further debug and diagnose cluster problems, use &#x27;kubectl cluster-info dump&#x27;.</span><br></pre></td></tr></table></figure><h3 id="2-容器化部署MariaDB"><a href="#2-容器化部署MariaDB" class="headerlink" title="2. 容器化部署MariaDB"></a>2. 容器化部署MariaDB</h3><h4 id="（1）编写Dockerfile"><a href="#（1）编写Dockerfile" class="headerlink" title="（1）编写Dockerfile"></a>（1）编写Dockerfile</h4><p>编写init.sh脚本： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# cd Pig/</span><br><span class="line">[root@master Pig]# vi mysql_init.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">mysql_install_db --user=root</span><br><span class="line">mysqld_safe --user=root &amp;</span><br><span class="line">sleep 8</span><br><span class="line">mysqladmin -u root password &#x27;root&#x27;</span><br><span class="line">mysql -uroot -proot -e &quot;grant all on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;root&#x27;;flush privileges;&quot;</span><br><span class="line">mysql -uroot -proot -e &quot;source /opt/pig.sql;source /opt/pig_codegen.sql;source /opt/pig_config.sql;source /opt/pig_job.sql;&quot;</span><br><span class="line">编写yum源：</span><br><span class="line"></span><br><span class="line">[root@master Pig]# vi local.repo</span><br><span class="line">[pig]</span><br><span class="line">name=pig</span><br><span class="line">baseurl=file:///root/yum</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">编写Dockerfile文件：</span><br><span class="line"></span><br><span class="line">[root@master Pig]# vi Dockerfile-mariadb </span><br><span class="line">FROM centos:centos7.9.2009</span><br><span class="line">MAINTAINER Chinaskills</span><br><span class="line">RUN rm -rf /etc/yum.repos.d/*</span><br><span class="line">COPY local.repo /etc/yum.repos.d/</span><br><span class="line">COPY yum /root/yum</span><br><span class="line">ENV LC_ALL en_US.UTF-8</span><br><span class="line">RUN yum -y install mariadb-server</span><br><span class="line">COPY mysql /opt/</span><br><span class="line">COPY mysql_init.sh /opt/</span><br><span class="line">RUN bash /opt/mysql_init.sh</span><br><span class="line">EXPOSE 3306</span><br><span class="line">CMD [&quot;mysqld_safe&quot;,&quot;--user=root&quot;]</span><br></pre></td></tr></table></figure><h4 id="（2）构建镜像"><a href="#（2）构建镜像" class="headerlink" title="（2）构建镜像"></a>（2）构建镜像</h4><p>构建镜像：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@master Pig]# docker build -t pig-mysql:v1.0 -f Dockerfile-mariadb .</span><br><span class="line">Sending build context to Docker daemon  890.9MB</span><br><span class="line">Step 1/12 : FROM centos:centos7.9.2009</span><br><span class="line"> ---&gt; eeb6ee3f44bd</span><br><span class="line">Step 2/12 : MAINTAINER Chinaskills</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 815a4a5f2242</span><br><span class="line">Step 3/12 : RUN rm -rf /etc/yum.repos.d/*</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 6afa0315cb5b</span><br><span class="line">Step 4/12 : COPY local.repo /etc/yum.repos.d/</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 4f07e082cc00</span><br><span class="line">Step 5/12 : COPY yum /root/yum</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 7042f9e7f455</span><br><span class="line">Step 6/12 : ENV LC_ALL en_US.UTF-8</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; df0aa8985d61</span><br><span class="line">Step 7/12 : RUN yum -y install mariadb-server</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 9ad09d62d373</span><br><span class="line">Step 8/12 : COPY mysql /opt/</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 75adb0e3bbb0</span><br><span class="line">Step 9/12 : COPY mysql_init.sh /opt/</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 3cc10e8ca0cc</span><br><span class="line">Step 10/12 : RUN bash /opt/mysql_init.sh</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; f7fe9f822cc3</span><br><span class="line">Step 11/12 : EXPOSE 3306</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 70f2274acbeb</span><br><span class="line">Step 12/12 : CMD [&quot;mysqld_safe&quot;,&quot;--user=root&quot;]</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; f088fb18dedf</span><br><span class="line">Successfully built f088fb18dedf</span><br><span class="line">Successfully tagged pig-mysql:v1.0</span><br></pre></td></tr></table></figure><h3 id="3-容器化部署Redis"><a href="#3-容器化部署Redis" class="headerlink" title="3. 容器化部署Redis"></a>3. 容器化部署Redis</h3><h4 id="（1）编写Dockerfile-1"><a href="#（1）编写Dockerfile-1" class="headerlink" title="（1）编写Dockerfile"></a>（1）编写Dockerfile</h4><p>编写Dockerfile文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@master Pig]# vi Dockerfile-redis</span><br><span class="line">FROM centos:centos7.9.2009</span><br><span class="line">MAINTAINER Chinaskills</span><br><span class="line">RUN rm -rf /etc/yum.repos.d/*</span><br><span class="line">COPY local.repo /etc/yum.repos.d/</span><br><span class="line">COPY yum /root/yum</span><br><span class="line">RUN yum -y install redis</span><br><span class="line">RUN sed -i &#x27;s/127.0.0.1/0.0.0.0/g&#x27; /etc/redis.conf &amp;&amp; \</span><br><span class="line">     sed -i &#x27;s/protected-mode yes/protected-mode no/g&#x27; /etc/redis.conf</span><br><span class="line">EXPOSE 6379</span><br><span class="line">CMD [&quot;/usr/bin/redis-server&quot;,&quot;/etc/redis.conf&quot;]</span><br></pre></td></tr></table></figure><h3 id="（2）构建镜像-1"><a href="#（2）构建镜像-1" class="headerlink" title="（2）构建镜像"></a>（2）构建镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@master Pig]# docker build -t pig-redis:v1.0 -f Dockerfile-redis .</span><br><span class="line">Sending build context to Docker daemon  890.9MB</span><br><span class="line">Step 1/9 : FROM centos:centos7.9.2009</span><br><span class="line"> ---&gt; eeb6ee3f44bd</span><br><span class="line">Step 2/9 : MAINTAINER Chinaskills</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 815a4a5f2242</span><br><span class="line">Step 3/9 : RUN rm -rf /etc/yum.repos.d/*</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 6afa0315cb5b</span><br><span class="line">Step 4/9 : COPY local.repo /etc/yum.repos.d/</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 4f07e082cc00</span><br><span class="line">Step 5/9 : COPY yum /root/yum</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 7042f9e7f455</span><br><span class="line">Step 6/9 : RUN yum -y install redis</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 2d0b65ca48f0</span><br><span class="line">Step 7/9 : RUN sed -i &#x27;s/127.0.0.1/0.0.0.0/g&#x27; /etc/redis.conf &amp;&amp;     sed -i &#x27;s/protected-mode yes/protected-mode no/g&#x27; /etc/redis.conf</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; fcb84f12d0cf</span><br><span class="line">Step 8/9 : EXPOSE 6379</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 37ac24f680d6</span><br><span class="line">Step 9/9 : CMD [&quot;/usr/bin/redis-server&quot;,&quot;/etc/redis.conf&quot;]</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; ee5f16785493</span><br><span class="line">Successfully built ee5f16785493</span><br><span class="line">Successfully tagged pig-redis:v1.0</span><br></pre></td></tr></table></figure><h3 id="4-容器化部署Pig"><a href="#4-容器化部署Pig" class="headerlink" title="4. 容器化部署Pig"></a>4. 容器化部署Pig</h3><h4 id="（1）编写Dockerfile-2"><a href="#（1）编写Dockerfile-2" class="headerlink" title="（1）编写Dockerfile"></a>（1）编写Dockerfile</h4><p>编写启动脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@master Pig]# vi pig_init.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">sleep 20</span><br><span class="line">nohup java -jar /root/pig-register.jar  $JAVA_OPTS  &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 20</span><br><span class="line">nohup java -jar /root/pig-gateway.jar  $JAVA_OPTS &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 20</span><br><span class="line">nohup java -jar /root/pig-auth.jar  $JAVA_OPTS &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">sleep 20</span><br><span class="line">nohup java -jar /root/pig-upms-biz.jar  $JAVA_OPTS &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">编写Dockerfile文件：</span><br><span class="line"></span><br><span class="line">[root@master Pig]# vi Dockerfile-pig </span><br><span class="line">FROM centos:centos7.9.2009</span><br><span class="line">MAINTAINER Chinaskills</span><br><span class="line">COPY service /root</span><br><span class="line">ADD yum /root/yum</span><br><span class="line">RUN rm -rfv /etc/yum.repos.d/*</span><br><span class="line">COPY local.repo /etc/yum.repos.d/local.repo</span><br><span class="line">RUN yum install -y java-1.8.0-openjdk java-1.8.0-openjdk-devel</span><br><span class="line">COPY pig_init.sh /root</span><br><span class="line">RUN chmod +x /root/pig_init.sh</span><br><span class="line">EXPOSE 8848 9999 3000 4000</span><br><span class="line">CMD [&quot;/bin/bash&quot;,&quot;/root/pig_init.sh&quot;]</span><br></pre></td></tr></table></figure><h4 id="（2）构建镜像-2"><a href="#（2）构建镜像-2" class="headerlink" title="（2）构建镜像"></a>（2）构建镜像</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@master Pig]# docker build -t pig-service:v1.0 -f Dockerfile-pig .</span><br><span class="line">Sending build context to Docker daemon  890.9MB</span><br><span class="line">Step 1/11 : FROM centos:centos7.9.2009</span><br><span class="line"> ---&gt; eeb6ee3f44bd</span><br><span class="line">Step 2/11 : MAINTAINER Chinaskills</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 24a91af3317f</span><br><span class="line">Step 3/11 : COPY service /root</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; d5fe8134b1ed</span><br><span class="line">Step 4/11 : ADD yum /root/yum</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 41cc1285cd49</span><br><span class="line">Step 5/11 : RUN rm -rfv /etc/yum.repos.d/*</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 2b8dc2f278e0</span><br><span class="line">Step 6/11 : COPY local.repo /etc/yum.repos.d/local.repo</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; a61d69862c5c</span><br><span class="line">Step 7/11 : RUN yum install -y java-1.8.0-openjdk java-1.8.0-openjdk-devel</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 92ccadeb64b6</span><br><span class="line">Step 8/11 : COPY pig_init.sh /root</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 1ab999a18ce1</span><br><span class="line">Step 9/11 : RUN chmod +x /root/pig_init.sh</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; dff4a7c6bba7</span><br><span class="line">Step 10/11 : EXPOSE 8848 9999 3000 4000</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; d4e37e3952af</span><br><span class="line">Step 11/11 : CMD [&quot;/bin/bash&quot;,&quot;/root/pig_init.sh&quot;]</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; acb3d73b810a</span><br><span class="line">Successfully built acb3d73b810a</span><br><span class="line">Successfully tagged pig-service:v1.0</span><br></pre></td></tr></table></figure><h3 id="5-容器化部署前端服务"><a href="#5-容器化部署前端服务" class="headerlink" title="5. 容器化部署前端服务"></a>5. 容器化部署前端服务</h3><h4 id="（1）编写Dockerfile-3"><a href="#（1）编写Dockerfile-3" class="headerlink" title="（1）编写Dockerfile"></a>（1）编写Dockerfile</h4><p>编写Dockerfile：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@master Pig]# vi Dockerfile-nginx </span><br><span class="line">FROM centos:centos7.9.2009</span><br><span class="line">MAINTAINER Chinaskills</span><br><span class="line">RUN rm -rf /etc/yum.repos.d/*</span><br><span class="line">COPY local.repo /etc/yum.repos.d/</span><br><span class="line">COPY yum /root/yum</span><br><span class="line">RUN yum -y install nginx</span><br><span class="line">COPY nginx/dist /data</span><br><span class="line">ADD nginx/pig-ui.conf /etc/nginx/conf.d/</span><br><span class="line">RUN /bin/bash -c &#x27;echo init ok&#x27;</span><br><span class="line">EXPOSE 80</span><br><span class="line">CMD [&quot;nginx&quot;,&quot;-g&quot;,&quot;daemon off;&quot;]</span><br></pre></td></tr></table></figure><h4 id="（2）构建镜像-3"><a href="#（2）构建镜像-3" class="headerlink" title="（2）构建镜像"></a>（2）构建镜像</h4><p>构建镜像：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@master Pig]# docker build -t pig-ui:v1.0 -f Dockerfile-nginx .</span><br><span class="line">Sending build context to Docker daemon  890.9MB</span><br><span class="line">Step 1/11 : FROM centos:centos7.9.2009</span><br><span class="line"> ---&gt; eeb6ee3f44bd</span><br><span class="line">Step 2/11 : MAINTAINER Chinaskills</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 815a4a5f2242</span><br><span class="line">Step 3/11 : RUN rm -rf /etc/yum.repos.d/*</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 6afa0315cb5b</span><br><span class="line">Step 4/11 : COPY local.repo /etc/yum.repos.d/</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 4f07e082cc00</span><br><span class="line">Step 5/11 : COPY yum /root/yum</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 7042f9e7f455</span><br><span class="line">Step 6/11 : RUN yum -y install nginx</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; b6ee699b51ed</span><br><span class="line">Step 7/11 : COPY nginx/dist /data</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 04b6d05ba642</span><br><span class="line">Step 8/11 : ADD nginx/pig-ui.conf /etc/nginx/conf.d/</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 661b56e2cff6</span><br><span class="line">Step 9/11 : RUN /bin/bash -c &#x27;echo init ok&#x27;</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 0d98b6d8a81c</span><br><span class="line">Step 10/11 : EXPOSE 80</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; b1f5ecafc494</span><br><span class="line">Step 11/11 : CMD [&quot;nginx&quot;,&quot;-g&quot;,&quot;daemon off;&quot;]</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; c20fc29b9daa</span><br><span class="line">Successfully built c20fc29b9daa</span><br><span class="line">Successfully tagged pig-ui:v1.0</span><br></pre></td></tr></table></figure><h3 id="6-编排部署Pig快速开发平台"><a href="#6-编排部署Pig快速开发平台" class="headerlink" title="6. 编排部署Pig快速开发平台"></a>6. 编排部署Pig快速开发平台</h3><h4 id="（1）编写docker-compose-yaml"><a href="#（1）编写docker-compose-yaml" class="headerlink" title="（1）编写docker-compose.yaml"></a>（1）编写docker-compose.yaml</h4><p>编写docker-compose.yaml编排文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@master Pig]# vi docker-compose.yaml</span><br><span class="line">version: &#x27;2&#x27;</span><br><span class="line">services:</span><br><span class="line">  pig-mysql:</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: root</span><br><span class="line">    restart: always</span><br><span class="line">    container_name: pig-mysql</span><br><span class="line">    image: pig-mysql:v1.0</span><br><span class="line">    ports:</span><br><span class="line">      - 3306:3306</span><br><span class="line">    links:</span><br><span class="line">      - pig-service:pig-register</span><br><span class="line">  pig-redis:</span><br><span class="line">    image: pig-redis:v1.0</span><br><span class="line">    ports:</span><br><span class="line">      - 6379:6379</span><br><span class="line">    restart: always</span><br><span class="line">    container_name: pig-redis</span><br><span class="line">    hostname: pig-redis</span><br><span class="line">    links:</span><br><span class="line">      - pig-service:pig-register</span><br><span class="line">  pig-service:</span><br><span class="line">    ports:</span><br><span class="line">      - 8848:8848</span><br><span class="line">      - 9999:9999</span><br><span class="line">    restart: always</span><br><span class="line">    container_name: pig-service</span><br><span class="line">    hostname: pig-service</span><br><span class="line">    image: pig-service:v1.0</span><br><span class="line">    extra_hosts:</span><br><span class="line">      - pig-register:127.0.0.1</span><br><span class="line">      - pig-upms:127.0.0.1</span><br><span class="line">      - pig-gateway:127.0.0.1</span><br><span class="line">      - pig-auth:127.0.0.1</span><br><span class="line">      - pig-hou:127.0.0.1</span><br><span class="line">    stdin_open: true</span><br><span class="line">    tty: true</span><br><span class="line">    privileged: true</span><br><span class="line">  pig-ui:</span><br><span class="line">    restart: always</span><br><span class="line">    container_name: pig-ui</span><br><span class="line">    image: pig-ui:v1.0</span><br><span class="line">    ports:</span><br><span class="line">      - 8888:80</span><br><span class="line">    links:</span><br><span class="line">      - pig-service:pig-gateway</span><br></pre></td></tr></table></figure><h4 id="（2）部署服务"><a href="#（2）部署服务" class="headerlink" title="（2）部署服务"></a>（2）部署服务</h4><p>部署服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@master Pig]# docker-compose up -d</span><br><span class="line">[+] Running 5/5</span><br><span class="line">⠿ Network  pig_default  Created                                       0.1s</span><br><span class="line">⠿ Container  pig-service  Started                                       0.7s</span><br><span class="line">⠿ Container  pig-mysql   Started                                       1.5s</span><br><span class="line">⠿ Container  pig-redis    Started                                       1.7s</span><br><span class="line">⠿ Container  pig-ui      Started                                       1.8s</span><br><span class="line">查看服务：</span><br><span class="line"></span><br><span class="line">[root@master Pig]# docker-compose ps</span><br><span class="line">NAME                COMMAND                  SERVICE             STATUS              PORTS</span><br><span class="line">pig-mysql           &quot;mysqld_safe --user=…&quot;   pig-mysql           running             0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp</span><br><span class="line">pig-redis           &quot;/usr/bin/redis-serv…&quot;   pig-redis           running             0.0.0.0:6379-&gt;6379/tcp, :::6379-&gt;6379/tcp</span><br><span class="line">pig-service         &quot;/bin/bash /root/pig…&quot;   pig-service         running             0.0.0.0:8848-&gt;8848/tcp, 0.0.0.0:9999-&gt;9999/tcp, :::8848-&gt;8848/tcp, :::9999-&gt;9999/tcp</span><br><span class="line">pig-ui              &quot;nginx -g &#x27;daemon of…&quot;   pig-ui              running             0.0.0.0:8888-&gt;80/tcp, :::8888-&gt;80/tcp</span><br><span class="line">等待3分钟左右，在浏览器上通过http://master_IP:8888访问Pig，</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔迹 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>添加图片</title>
      <link href="/posts/37ae.html"/>
      <url>/posts/37ae.html</url>
      
        <content type="html"><![CDATA[<h2 id="图片添加"><a href="#图片添加" class="headerlink" title="图片添加"></a>图片添加</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;更新图片&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动化链接克隆虚拟机脚本</title>
      <link href="/posts/ee58.html"/>
      <url>/posts/ee58.html</url>
      
        <content type="html"><![CDATA[<p>##你好！世界<br>###安装虚拟机<br>安装虚拟机的时候勾上网卡选项<br>ip a 查看IP地址，链接上终端软件xshell等<br>忘记勾选，可以编辑网卡配置文件 vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">TYPE=Ethernet</span></span><br><span class="line"><span class="string">PROXY_METHOD=none</span></span><br><span class="line"><span class="string">BROWSER_ONLY=no</span></span><br><span class="line"><span class="string">BOOTPROTO=dhcp</span> <span class="comment">#改成dhcp</span></span><br><span class="line"><span class="string">DEFROUTE=yes</span></span><br><span class="line"><span class="string">IPV4_FAILURE_FATAL=no</span></span><br><span class="line"><span class="string">IPV6INIT=yes</span></span><br><span class="line"><span class="string">IPV6_AUTOCONF=yes</span></span><br><span class="line"><span class="string">IPV6_DEFROUTE=yes</span></span><br><span class="line"><span class="string">IPV6_FAILURE_FATAL=no</span></span><br><span class="line"><span class="string">IPV6_ADDR_GEN_MODE=stable-privacy</span></span><br><span class="line"><span class="string">NAME=ens33</span></span><br><span class="line"><span class="string">UUID=e97ec6f4-50db-4474-a67e-4c921058d661</span></span><br><span class="line"><span class="string">DEVICE=ens33</span></span><br><span class="line"><span class="string">ONBOOT=yes</span> <span class="comment">#no改成yes</span></span><br></pre></td></tr></table></figure><p>重启网卡systemctl restark network 再ip a 查看IP地址，链接上终端软件xshell等</p><p>###配置本地yum源</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> /etc/yum.repo.d/* /home</span><br><span class="line">vi /etc/yum.repo.d/a.repo</span><br></pre></td></tr></table></figure><p>###repo内容如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">a</span>]</span><br><span class="line"><span class="string">name=a</span></span><br><span class="line"><span class="string">baseurl=file:///media</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br></pre></td></tr></table></figure><p>###挂载安装软件，kvm安装虚拟机<br>将镜像文件上传到opt目录下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/cdrom /media</span><br><span class="line">yum install -y libvirt virt-install qemu-kvm vim</span><br><span class="line">systemctl start libvirtd.service</span><br><span class="line">systemctl status libvirtd.service</span><br><span class="line">systemctl stop firewalld </span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld </span><br><span class="line">virt-install --virt-type kvm --os-type=linux --os-variant rhel7 --name centos7 --memory 1024 --vcpus 1 --disk /opt/centos.raw,format=raw,size=10 --cdrom /opt/CentOS-7-x86_64-DVD-1810.iso --network network=default --graphics vnc,listen=0.0.0.0 --noautoconsole</span><br></pre></td></tr></table></figure><p>###在vnc连接虚拟机安装虚拟机，过程省略<br>名字按实际情况修改</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">virsh list --all</span><br><span class="line">virsh destroy centos7</span><br><span class="line">virsh domrename centos7 ao</span><br><span class="line">virsh list --all</span><br></pre></td></tr></table></figure><p>###更改磁盘格式</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">qemu-img convert -f raw -O qcow2 centos.raw centos.qcow2</span><br><span class="line">virsh edit ao</span><br></pre></td></tr></table></figure><p>###更改以下内容</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;devices&gt;</span></span><br><span class="line">   <span class="string">&lt;emulator&gt;/usr/libexec/qemu-kvm&lt;/emulator&gt;</span></span><br><span class="line">   <span class="string">&lt;disk</span> <span class="string">type=&#x27;file&#x27;</span> <span class="string">device=&#x27;disk&#x27;&gt;</span></span><br><span class="line">     <span class="string">&lt;driver</span> <span class="string">name=&#x27;qemu&#x27;</span> <span class="string">type=&#x27;qcow2&#x27;/&gt;</span> <span class="comment">#raw改成qcow2</span></span><br><span class="line">     <span class="string">&lt;source</span> <span class="string">file=&#x27;/opt/centos.qcow2&#x27;/&gt;</span> <span class="comment">#raw改成qcow2</span></span><br><span class="line">     <span class="string">&lt;target</span> <span class="string">dev=&#x27;vda&#x27;</span> <span class="string">bus=&#x27;virtio&#x27;/&gt;</span></span><br><span class="line">     <span class="string">&lt;address</span> <span class="string">type=&#x27;pci&#x27;</span> <span class="string">domain=&#x27;0x0000&#x27;</span> <span class="string">bus=&#x27;0x00&#x27;</span> <span class="string">slot=&#x27;0x06&#x27;</span> <span class="string">function=&#x27;0x0&#x27;/&gt;</span></span><br><span class="line">   <span class="string">&lt;/disk&gt;</span></span><br></pre></td></tr></table></figure><p>###开机验证  virsh start ao<br>###快照管理<br>名字按实际情况修改</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">virsh snapshot-create-as ao</span><br><span class="line">virsh snapshot-list ao </span><br><span class="line">virsh snapshot-revert ao 167093632 </span><br><span class="line">virsh snapshot-delete ao --snapshotname 1670936324</span><br></pre></td></tr></table></figure><p>###自动化克隆完整虚拟机web01</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ll -h</span><br><span class="line">virt-clone --auto-clone -o ao -n web01</span><br><span class="line">ll -h</span><br><span class="line">virsh dumpxml web01|grep qcow2</span><br></pre></td></tr></table></figure><p>###脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /server/scripts</span><br><span class="line"><span class="built_in">cd</span> /server/scripts</span><br><span class="line">vim link_clone.sh</span><br></pre></td></tr></table></figure><p>###内容如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="string">new_vm=$1</span></span><br><span class="line"><span class="string">qemu-img</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">qcow2</span> <span class="string">-b</span> <span class="string">/opt/centos.qcow2</span> <span class="string">/opt/$&#123;new_vm&#125;.qcow2</span></span><br><span class="line"><span class="string">virsh</span> <span class="string">dumpxml</span> <span class="string">ao</span> <span class="string">&gt;/tmp/$&#123;new_vm&#125;.xml</span></span><br><span class="line"><span class="string">sed</span> <span class="string">-ri</span> <span class="string">&quot;s#(&lt;name&gt;)(.*)(&lt;/name&gt;)#\1$&#123;new_vm&#125;\3#g&quot;</span> <span class="string">/tmp/$&#123;new_vm&#125;.xml</span></span><br><span class="line"><span class="string">sed</span> <span class="string">-i</span> <span class="string">&#x27;/&lt;uuid&gt;/d&#x27;</span> <span class="string">/tmp/$&#123;new_vm&#125;.xml</span></span><br><span class="line"><span class="string">sed</span> <span class="string">-i</span> <span class="string">&#x27;/&lt;mac address/d&#x27;</span> <span class="string">/tmp/$&#123;new_vm&#125;.xml</span></span><br><span class="line"><span class="string">sed</span> <span class="string">-ri</span> <span class="string">&quot;s#(&lt;source file=&#x27;)(.*)(&#x27;/&gt;)#\1/opt/$&#123;new_vm&#125;.qcow2\3#g&quot;</span> <span class="string">/tmp/$&#123;new_vm&#125;.xml</span></span><br><span class="line"><span class="string">virsh</span> <span class="string">define</span> <span class="string">/tmp/$&#123;new_vm&#125;.xml</span></span><br><span class="line"><span class="string">virsh</span> <span class="string">start</span> <span class="string">$&#123;new_vm&#125;</span></span><br></pre></td></tr></table></figure><p>###sh link_clone.sh 新名字</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔迹 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker</title>
      <link href="/posts/c018.html"/>
      <url>/posts/c018.html</url>
      
        <content type="html"><![CDATA[<h3 id="基础运维任务"><a href="#基础运维任务" class="headerlink" title="基础运维任务"></a>基础运维任务</h3><p>避坑：<br>paas镜像只能挂载在&#x2F;opt 执行脚本得在&#x2F;opt目录下<br>centos不要挂载&#x2F;opt下<br>略 祥见openstack</p><h3 id="Docker-CE及私有仓库安装任务"><a href="#Docker-CE及私有仓库安装任务" class="headerlink" title="Docker CE及私有仓库安装任务"></a>Docker CE及私有仓库安装任务</h3><h4 id="1．在master节点中使用提供的脚本完成Docker-CE、docker-compose以及Harbor仓库的安装，导入-x2F-opt-x2F-images目录下的所有镜像，并推送到私有仓库。"><a href="#1．在master节点中使用提供的脚本完成Docker-CE、docker-compose以及Harbor仓库的安装，导入-x2F-opt-x2F-images目录下的所有镜像，并推送到私有仓库。" class="headerlink" title="1．在master节点中使用提供的脚本完成Docker CE、docker-compose以及Harbor仓库的安装，导入&#x2F;opt&#x2F;images目录下的所有镜像，并推送到私有仓库。"></a>1．在master节点中使用提供的脚本完成Docker CE、docker-compose以及Harbor仓库的安装，导入&#x2F;opt&#x2F;images目录下的所有镜像，并推送到私有仓库。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd opt</span><br><span class="line">./k8s_harbor_install.sh </span><br><span class="line">docker info </span><br><span class="line">docker version #docker版本</span><br><span class="line">docker-compose version  #docker-compose版本</span><br><span class="line">./k8s_image_push.sh #安装私有仓库</span><br><span class="line">docker images | grep harbor #查看关联容器</span><br></pre></td></tr></table></figure><h3 id="容器编排"><a href="#容器编排" class="headerlink" title="容器编排"></a>容器编排</h3><p>在master节点上编写&#x2F;root&#x2F;wordpress&#x2F;docker-compose.yaml文件，具体要求如下：<br>（1）容器名称：wordpress；镜像：wordpress:latest；端口映射：82:80；<br>（2）容器名称：mysql；镜像：mysql:5.6；<br>（3）MySQLroot用户密码：123456；<br>（4）创建数据库wordpress。<br>完成后编排部署WordPress。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">mkdir wordpress</span><br><span class="line">cd wordpress</span><br><span class="line">vi docker-compose.yaml</span><br><span class="line"></span><br><span class="line">version: &#x27;3&#x27;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:5.6</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: 123456</span><br><span class="line">      MYSQL_DATABASE: wordpress</span><br><span class="line"></span><br><span class="line">  wordpress:</span><br><span class="line">    depends_on:</span><br><span class="line">      - mysql</span><br><span class="line">    image: wordpress:latest</span><br><span class="line">    ports:</span><br><span class="line">      - 82:80</span><br><span class="line">    links:</span><br><span class="line">      - mysql:mysql</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      WORDPRESS_DB_HOST: mysql:3306</span><br><span class="line">      WORDPRESS_DB_USER: root</span><br><span class="line">      WORDPRESS_DB_PASSWORD: 123456</span><br><span class="line">      WORDPRESS_DB_NAME: wordpress</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br><span class="line">docker-compose ps</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3&#x27;</span><br><span class="line">services:</span><br><span class="line">  mysql:</span><br><span class="line">    restart: always</span><br><span class="line">    image: mysql:5.6</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: 123456</span><br><span class="line">      MYSQL_DATABASE: ownclouds</span><br><span class="line">  owncloud:</span><br><span class="line">     restart: always</span><br><span class="line">     image: owncloud:latest</span><br><span class="line">     ports:</span><br><span class="line">       - 5678:80</span><br><span class="line">     depends_on:</span><br><span class="line">       - mysql</span><br><span class="line">     links:</span><br><span class="line">       - mysql:mysql</span><br><span class="line">     volumes:</span><br><span class="line">       - /data/db/owncloud:/var/www/html/data</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create deploy nginx-deployment --image=192.168.10.11/library/nginx:lastest -o yaml --dry-run &gt; nginx-deployment.yaml</span><br><span class="line"></span><br><span class="line">kubectl run nginx-pod --image=192.168.10.11/library/nginx:latest --port 80 -o yaml --dry-run &gt; nginx.yaml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔迹 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>openstack</title>
      <link href="/posts/df2b.html"/>
      <url>/posts/df2b.html</url>
      
        <content type="html"><![CDATA[<h2 id="基础运维任务"><a href="#基础运维任务" class="headerlink" title="基础运维任务"></a>基础运维任务</h2><p>设置各服务器节点的IP地址，确保网络正常通信，设置云服务器1主机名为Controller，云服务器2主机名为Compute，并在各服务器节点中设置主机名与IP地址的映射、关闭防火墙并设置为开机不启动、SELinux 为 Permissive 模式。（1分）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname controller <span class="comment">#计算节点compute</span></span><br><span class="line">bash</span><br><span class="line">vi /etc/hosts</span><br></pre></td></tr></table></figure><p>hosts内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">192.168.10.10 controller</span><br><span class="line">192.168.10.20 compute</span><br><span class="line"></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br></pre></td></tr></table></figure><p>配置免密登录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>2．将提供的CentOS-7-x86_64-DVD-1804.iso和OpenStackQueens.iso光盘镜像上传到Controller服务器的&#x2F;root目录下，然后在&#x2F;opt目录下分别创建centos目录和openstack目录，并将镜像文件CentOS-7-x86_64-DVD-1804.iso挂载到centos目录下，将镜像文件OpenStackQueens.iso挂载到openstack目录下。（1分）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /opt/centos</span><br><span class="line"><span class="built_in">mkdir</span> /opt/iaas</span><br><span class="line">mount -o loop chinaskills_cloud_iaas.iso /opt/iaas/</span><br><span class="line">mount -o loop CentOS-7.5-x86_64-DVD-1804.iso /opt/centos/</span><br></pre></td></tr></table></figure><p>3．在Controller服务器上利用centos目录中的软件包安装vsftp服务器并设置开机自启动，提供yum仓库服务，并分别设置controller和compute服务器的yum源文件ftp.repo，其中节点的地址使用主机名形式。（1分）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /etc/yum.repos.d/*</span><br><span class="line">vi /etc/yum.repos.d/http.repo</span><br><span class="line">yum repolist</span><br><span class="line">yum install -y vsftpd</span><br><span class="line">vi /etc/vsftpd/vsftpd.conf  <span class="comment">#vsftpd.conf内容加入anon_root=/opt</span></span><br><span class="line">systemctl restart vsftpd</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><p>controller节点repo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[centos]</span><br><span class="line">name=centos</span><br><span class="line">baseurl=file:///opt/centos</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[iaas]</span><br><span class="line">name=iaas</span><br><span class="line">baseurl=file:///opt/iaas/iaas-repo</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p>compute节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[centos]</span><br><span class="line">name=centos</span><br><span class="line">baseurl=ftp://controller/centos</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[iaas]</span><br><span class="line">name=iaas</span><br><span class="line">baseurl=ftp://controller/iaas/iaas-repo</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p>5．在compute节点上创建2个20G的磁盘分区。（1分）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">[root@compute ~]<span class="comment"># lsblk</span></span><br><span class="line">NAME            MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda               8:0    0   200G  0 disk</span><br><span class="line">├─sda1            8:1    0     1G  0 part /boot</span><br><span class="line">└─sda2            8:2    0   199G  0 part</span><br><span class="line">  ├─centos-root 253:0    0    50G  0 lvm  /</span><br><span class="line">  ├─centos-swap 253:1    0   7.9G  0 lvm  [SWAP]</span><br><span class="line">  └─centos-home 253:2    0 141.1G  0 lvm  /home</span><br><span class="line">sdb               8:16   0    50G  0 disk</span><br><span class="line">sr0              11:0    1   4.2G  0 rom</span><br><span class="line">[root@compute ~]<span class="comment"># fdisk /dev/sdb</span></span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">使用磁盘标识符 0x95832372 创建新的 DOS 磁盘标签。</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">分区号 (1-4，默认 1)：</span><br><span class="line">起始 扇区 (2048-104857599，默认为 2048)：</span><br><span class="line">将使用默认值 2048</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-104857599，默认为 104857599)：+20G</span><br><span class="line">分区 1 已设置为 Linux 类型，大小设为 20 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (1 primary, 0 extended, 3 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">分区号 (2-4，默认 2)：</span><br><span class="line">起始 扇区 (41945088-104857599，默认为 41945088)：</span><br><span class="line">将使用默认值 41945088</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (41945088-104857599，默认为 104857599)：+20G</span><br><span class="line">分区 2 已设置为 Linux 类型，大小设为 20 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">正在同步磁盘。</span><br></pre></td></tr></table></figure><h2 id="OpenStack搭建任务"><a href="#OpenStack搭建任务" class="headerlink" title="OpenStack搭建任务"></a>OpenStack搭建任务</h2><h3 id="环境变量配置（1分）"><a href="#环境变量配置（1分）" class="headerlink" title="环境变量配置（1分）"></a>环境变量配置（1分）</h3><p>在控制节点和计算节点分别安装iaas-xiandian软件包，根据表2完成脚本文件openrc.sh的配置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install iaas-xiandian -y</span><br><span class="line">vi /etc/xiandian/openrc.sh</span><br><span class="line">scp /etc/xiandian/openrc.sh compute:/etc/xiandian/openrc.sh</span><br></pre></td></tr></table></figure><p>openrc.sh内容 （:%s&#x2F;PASS&#x3D;&#x2F;PASS&#x3D;000000&#x2F;g）替换</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------system Config--------------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Controller Server Manager IP. example:x.x.x.x</span></span><br><span class="line">HOST_IP=192.168.10.10//controller节点nat网卡的ip</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Controller HOST Password. example:000000</span> </span><br><span class="line">HOST_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Controller Server hostname. example:controller</span></span><br><span class="line">HOST_NAME=controller</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Compute Node Manager IP. example:x.x.x.x</span></span><br><span class="line">HOST_IP_NODE=192.168.10.20//compute节点nat网卡IP</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Compute HOST Password. example:000000</span> </span><br><span class="line">HOST_PASS_NODE=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Compute Node hostname. example:compute</span></span><br><span class="line">HOST_NAME_NODE=compute</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------Chrony Config-------------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Controller network segment IP.  example:x.x.0.0/16(x.x.x.0/24)</span></span><br><span class="line">network_segment_IP=192.168.10.0/24  //两个节点nat网卡的网段 用于时间同步服务</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------Rabbit Config ------------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">user <span class="keyword">for</span> rabbit. example:openstack</span></span><br><span class="line">RABBIT_USER=openstack</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> rabbit user .example:000000</span></span><br><span class="line">RABBIT_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------MySQL Config---------------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> MySQL root user . exmaple:000000</span></span><br><span class="line">DB_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------Keystone Config------------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Keystore admin user. exmaple:000000</span></span><br><span class="line">DOMAIN_NAME=demo</span><br><span class="line">ADMIN_PASS=000000</span><br><span class="line">DEMO_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Mysql keystore user. exmaple:000000</span></span><br><span class="line">KEYSTONE_DBPASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------Glance Config--------------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Mysql glance user. exmaple:000000</span></span><br><span class="line">GLANCE_DBPASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Keystore glance user. exmaple:000000</span></span><br><span class="line">GLANCE_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------Nova Config----------------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Mysql nova user. exmaple:000000</span></span><br><span class="line">NOVA_DBPASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Keystore nova user. exmaple:000000</span></span><br><span class="line">NOVA_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------Neturon Config-------------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Mysql neutron user. exmaple:000000</span></span><br><span class="line">NEUTRON_DBPASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Keystore neutron user. exmaple:000000</span></span><br><span class="line">NEUTRON_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">metadata secret <span class="keyword">for</span> neutron. exmaple:000000</span></span><br><span class="line">METADATA_SECRET=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Tunnel Network Interface. example:x.x.x.x</span></span><br><span class="line">INTERFACE_IP=172.17.1.10     //当前节点的内网IP 也就是controller节点的nat网卡IP   在compute节点就是172.17.1.20</span><br><span class="line">   两个节点的配置文件就这里不一样 其他直接复制即可</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">External Network Interface. example:eth1</span></span><br><span class="line">INTERFACE_NAME=ens33         //内网网卡=nat网卡</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">External Network The Physical Adapter. example:provider</span></span><br><span class="line">Physical_NAME=provider   //供应商名称  默认</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">First Vlan ID <span class="keyword">in</span> VLAN RANGE <span class="keyword">for</span> VLAN Network. exmaple:101</span></span><br><span class="line">minvlan=101//VLAN id 默认</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Last Vlan ID <span class="keyword">in</span> VLAN RANGE <span class="keyword">for</span> VLAN Network. example:200</span></span><br><span class="line">maxvlan=200//VLAN id 默认</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------Cinder Config--------------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Mysql cinder user. exmaple:000000</span></span><br><span class="line">CINDER_DBPASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Keystore cinder user. exmaple:000000</span></span><br><span class="line">CINDER_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Cinder Block Disk. example:md126p3</span></span><br><span class="line">BLOCK_DISK=sdb1  //compute节点分好的区 用于cinder块存储 具体区你们的compute节点上查看 查看分区命令:lsblk</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------Swift Config---------------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Keystore swift user. exmaple:000000</span></span><br><span class="line">SWIFT_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">The NODE Object Disk <span class="keyword">for</span> Swift. example:md126p4.</span></span><br><span class="line">OBJECT_DISK=sdb2//compute节点分好的区 用于swift对象存储 具体区你们的compute节点上查看 查看分区命令:lsblk</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">The NODE IP <span class="keyword">for</span> Swift Storage Network. example:x.x.x.x.</span></span><br><span class="line">STORAGE_LOCAL_NET_IP=192.168.10.20//swift服务运行的节点 compute节点的ip</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------Heat Config----------------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Mysql heat user. exmaple:000000</span></span><br><span class="line">HEAT_DBPASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Keystore heat user. exmaple:000000</span></span><br><span class="line">HEAT_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------Zun Config-----------------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Mysql Zun user. exmaple:000000</span></span><br><span class="line">ZUN_DBPASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Keystore Zun user. exmaple:000000</span></span><br><span class="line">ZUN_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Mysql Kuryr user. exmaple:000000</span></span><br><span class="line">KURYR_DBPASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Keystore Kuryr user. exmaple:000000</span></span><br><span class="line">KURYR_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------Ceilometer Config----------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Gnocchi ceilometer user. exmaple:000000</span></span><br><span class="line">CEILOMETER_DBPASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Keystore ceilometer user. exmaple:000000</span></span><br><span class="line">CEILOMETER_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------AODH Config----------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Mysql AODH user. exmaple:000000</span></span><br><span class="line">AODH_DBPASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Keystore AODH user. exmaple:000000</span></span><br><span class="line">AODH_PASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------Barbican Config----------------<span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Mysql Barbican user. exmaple:000000</span></span><br><span class="line">BARBICAN_DBPASS=000000</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Password <span class="keyword">for</span> Keystore Barbican user. exmaple:000000</span></span><br><span class="line">BARBICAN_PASS=000000</span><br></pre></td></tr></table></figure><p>执行安装脚本<br>controller节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">iaas-pre-host.sh <span class="comment">#重连终端或重启</span></span><br><span class="line">iaas-install-mysql.sh  <span class="comment">#</span></span><br><span class="line">iaas-install-keystone.sh</span><br><span class="line">iaas-install-glance.sh</span><br><span class="line">iaas-install-nova-controller.sh</span><br><span class="line">iaas-install-neutron-controller.sh</span><br><span class="line">iaas-install-dashboard.sh</span><br></pre></td></tr></table></figure><p>compute节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iaas-pre-host.sh <span class="comment">#重连终端或重启</span></span><br><span class="line">iaas-install-nova-compute.sh</span><br><span class="line">iaas-install-neutron-compute.sh</span><br></pre></td></tr></table></figure><p>省比赛只到这里，我不确定后面还要不</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iaas-install-cinder-controller.sh</span><br><span class="line">iaas-install-swift-controller.sh</span><br><span class="line">iaas-install-heat.sh</span><br><span class="line">iaas-install-zun-controller.sh</span><br><span class="line">iaas-install-ceilometer-controller.sh</span><br><span class="line">iaas-install-aodh.sh</span><br></pre></td></tr></table></figure><p>compute</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iaas-install-cinder-compute.sh</span><br><span class="line">iaas-install-swift-compute.sh</span><br><span class="line">iaas-install-zun-compute.sh</span><br><span class="line">iaas-install-ceilometer-compute.sh</span><br></pre></td></tr></table></figure><h3 id="数据库安装（2分）"><a href="#数据库安装（2分）" class="headerlink" title="数据库安装（2分）"></a>数据库安装（2分）</h3><p>使用脚本安装数据库服务，进入数据库。</p><p>（1）创建本地用户examuser，密码为000000；</p><p>（2）查询mysql数据库中的user表的host，user，password字段；</p><p>（3）赋予这个用户对所有数据库拥有“查询”“删除”“更新”“创建”的本地权限。 依次将操作命令和返回结果以文本形式提交到答题框。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@controller ~]<span class="comment"># mysql -uroot -p000000  //登录数据库</span></span><br><span class="line">[MariaDB [(none)]&gt; insert into mysql.user(host,user,Password) values(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;examuser&quot;</span>,Password(<span class="string">&quot;000000&quot;</span>));</span><br><span class="line">Query OK, 1 row affected, 4 warnings (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use mysql</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [mysql]&gt; select host,user,password from user;</span><br><span class="line">+-----------+----------+-------------------------------------------+</span><br><span class="line">| host      | user     | password                                  |</span><br><span class="line">+-----------+----------+-------------------------------------------+</span><br><span class="line">| localhost | root     | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| xiandian  | root     | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| 127.0.0.1 | root     | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| ::1       | root     | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| localhost | keystone | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| %         | keystone | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| localhost | glance   | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| %         | glance   | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| localhost | nova     | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| %         | nova     | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| localhost | neutron  | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| %         | neutron  | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| localhost | cinder   | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| %         | cinder   | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| localhost | heat     | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| %         | heat     | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| localhost | aodh     | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| %         | aodh     | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">| localhost | examuser | *032197AE5731D4664921A6CCAC7CFCE6A0698693 |</span><br><span class="line">+-----------+----------+-------------------------------------------+</span><br><span class="line">19 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; grant select,delete,update,create on *.* to examuser@<span class="string">&quot;localhost&quot;</span> identified by <span class="string">&quot;000000&quot;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line">MariaDB [mysql]&gt; flush privileges;  //刷新权限</span><br><span class="line">MariaDB [mysql]&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">insert into mysql.user(host,user,Password) values(&quot;localhost&quot;,&quot;examuser&quot;,Password(&quot;000000&quot;));</span><br><span class="line">use mysql</span><br><span class="line">select host,user,password from user;</span><br><span class="line">grant select,delete,update,create on *.* to examuser@&quot;localhost&quot; identified by &quot;000000&quot;;</span><br><span class="line">flush privileges; </span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>版本2<br>数据库安装与调优[0.5 分]<br>在 controller 节点上使用 iaas-install-mysql.sh 脚本安装 Mariadb、Memcached、RabbitMQ<br>等服务。安装服务完毕后，修改&#x2F;etc&#x2F;my.cnf 文件，完成下列要求：</p><p>1.设置数据库支持大小写；<br>2.设置数据库缓存 innodb 表的索引，数据，插入数据时的缓冲为 4G；</p><p>3.设置数据库的 log buffer 为 64MB；<br>4.设置数据库的 redo log 大小为 256MB；<br>5.设置数据库的 redo log 文件组为 2。<br>完成后提交控制节点的用户名、密码和 IP 地址到答题框。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[root@controller ~]# iaas-pre-host.sh</span><br><span class="line">[root@compute ~]# iaas-pre-host.sh</span><br><span class="line">#执行完这一步，一定要重新连接，刷新一下，不然rabbitmq服务会报错</span><br><span class="line"></span><br><span class="line">[root@compute ~]# iaas-install-mysql.sh</span><br><span class="line"></span><br><span class="line">[root@controller ~]# cat /etc/my.cnf</span><br><span class="line">#</span><br><span class="line"># This group is read both both by the client and the server</span><br><span class="line"># use it for options that affect everything</span><br><span class="line">#</span><br><span class="line">[client-server]</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># This group is read by the server</span><br><span class="line">#</span><br><span class="line">[mysqld]</span><br><span class="line"># Disabling symbolic-links is recommended to prevent assorted security risks</span><br><span class="line">symbolic-links=0</span><br><span class="line">default-storage-engine = innodb</span><br><span class="line">innodb_file_per_table</span><br><span class="line">collation-server = utf8_general_ci</span><br><span class="line">init-connect = &#x27;SET NAMES utf8&#x27;</span><br><span class="line">character-set-server = utf8</span><br><span class="line">max_connections=10000</span><br><span class="line"></span><br><span class="line">innodb_log_buffer_size = 4M</span><br><span class="line">#此参数确定些日志文件所用的内存大小，以M为单位。缓冲区更大能提高性能，但意外的故障将会丢失数据。MySQL开发人员建议设置为1－8M之间</span><br><span class="line"></span><br><span class="line">innodb_log_file_size = 32M</span><br><span class="line">#此参数确定数据日志文件的大小，更大的设置可以提高性能，但也会增加恢复故障数据库所需的时间</span><br><span class="line"></span><br><span class="line">innodb_log_files_in_group = 3</span><br><span class="line">#为提高性能，MySQL可以以循环方式将日志文件写到多个文件。推荐设置为3</span><br><span class="line"></span><br><span class="line">#1，数据库不区分大小写，其中 0：区分大小写，1：不区分大小写</span><br><span class="line">lower_case_table_names =1</span><br><span class="line"></span><br><span class="line">#2,设置innodb的数据缓冲为4G</span><br><span class="line">innodb_buffer_pool_size = 4G</span><br><span class="line"></span><br><span class="line">#3，传输数据包的大小值</span><br><span class="line">max_allowed_packet = 30M</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># include all files from the config directory</span><br><span class="line">#</span><br><span class="line">!includedir /etc/my.cnf.d</span><br><span class="line"></span><br><span class="line">[root@controller ~]#</span><br></pre></td></tr></table></figure><p>修改OpenStack平台</p><p>修改Nova服务配置文件，设置参数“virt_type&#x3D;qemu”。命令参数如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@controller ~]# crudini --set /etc/nova/nova.conf libvirt virt_type qemu</span><br><span class="line">[root@controller ~]# systemctl restart openstack-nova-compute</span><br></pre></td></tr></table></figure><p>上传镜像，使用“openstack image list”命令查看当前可用镜像列表。命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@controller ~]# curl -O http://mirrors.douxuedu.com/newcloud/cirros-0.3.4-x86_64-disk.img</span><br><span class="line">[root@controller ~]# glance image-create --name cirros-0.3.4 --disk-format qcow2 --container-format bare --progress &lt; cirros-0.3.4-x86_64-disk.img</span><br><span class="line">…</span><br><span class="line">[root@controller ~]# openstack image list</span><br><span class="line">+--------------------------------------+--------------+---------+</span><br><span class="line">| ID                                   | Name         | Status  |</span><br><span class="line">+--------------------------------------+--------------+---------+</span><br><span class="line">| 32a2513c-e5ba-438b-a5ee-63c35c03b284 | cirros-0.3.4 | active |</span><br><span class="line">+--------------------------------------+--------------+---------+</span><br></pre></td></tr></table></figure><p>创建镜像和网络：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@controller ~]# curl -O http://mirrors.douxuedu.com/newcloud/cirros-0.3.4-x86_64-disk.img</span><br><span class="line">[root@controller ~]# source /etc/keystone/admin-openrc.sh</span><br><span class="line">[root@controller ~]# glance image-create --name cirros-0.3.4 --disk-format qcow2 --container-format bare --progress &lt; cirros-0.3.4-x86_64-disk.img</span><br><span class="line">…</span><br><span class="line">[root@controller ~]# openstack network create --provider-network-type vlan --provider-physical-network provider network-vlan --provider-segment 200</span><br><span class="line">…</span><br><span class="line">[root@controller ~]# openstack subnet create  --network network-vlan  --allocation-pool start=192.168.200.100,end=192.168.200.200 --gateway 192.168.200.1 --subnet-range 192.168.200.0/24  subnet-vlan</span><br></pre></td></tr></table></figure><p>NFS服务配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/exports</span><br><span class="line"></span><br><span class="line">/mnt/test 10.24.200.0/24(rw,no_root_squash,no_all_squash,sync,anonuid=501,anongid=501)</span><br></pre></td></tr></table></figure><p>云主机调整类型大小<br>（1）修改配置文件</p><p>修改controller节点nova.conf配置文件，添加调整类型大小的参数，controller节点设置参数如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@controller ~]# crudini --set /etc/nova/nova.conf DEFAULT allow_resize_to_same_host True</span><br><span class="line">[root@controller ~]# crudini --set /etc/nova/nova.conf DEFAULT scheduler_default_filters RetryFilter,AvailabilityZoneFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter</span><br></pre></td></tr></table></figure><h3 id="keystone安装（2分）"><a href="#keystone安装（2分）" class="headerlink" title="keystone安装（2分）"></a>keystone安装（2分）</h3><p>使用脚本安装keystone服务，创建用户testuser，密码为xiandian，将testuser用户分配给admin项目，赋予用户admin的权限。依次将操作命令和查询结果以文本形式提交到答题框。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@controller ~]# iaas-install-keystone.sh</span><br><span class="line">[root@controller ~]# source /etc/keystone/admin-openrc.sh  //加载keystone的环境变量</span><br><span class="line">[root@controller ~]# openstack user create --domain demo --password xiandian testuser</span><br><span class="line">+-----------+----------------------------------+</span><br><span class="line">| Field     | Value                            |</span><br><span class="line">+-----------+----------------------------------+</span><br><span class="line">| domain_id | 5a486c51bc8e4dffa4a181f6c54e0938 |</span><br><span class="line">| enabled   | True                             |</span><br><span class="line">| id        | ec6d67cdb3ac4b3ca827587c14be0a3e |</span><br><span class="line">| name      | testuser                         |</span><br><span class="line">+-----------+----------------------------------+</span><br><span class="line">[root@controller ~]# openstack role add --project admin --user testuser admin</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>版本2<br>Keystone 服务安装与使用[0.5 分]<br>在 controller 节点上使用 iaas-install-keystone.sh 脚本安装 Keystone 服务。安装完成后， 使用相关命令，创建用户 chinaskill，密码为 000000。完成后提交控制节点的用户名、密码和 IP 地址到答题框。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@controller ~]# iaas-install-keystone.sh</span><br><span class="line">[root@controller ~]# source /etc/keystone/admin-openrc.sh</span><br><span class="line">[root@controller ~]# openstack user create --domain demo --password 000000 chinaskill</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">| Field               | Value                            |</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">| domain_id           | b11e543ed5104ef79cd7a65c24ea156a |</span><br><span class="line">| enabled             | True                             |</span><br><span class="line">| id                  | 8bd1afe33af44e24aeb9f3d9a234aa75 |</span><br><span class="line">| name                | chinaskill                       |</span><br><span class="line">| options             | &#123;&#125;                               |</span><br><span class="line">| password_expires_at | None                             |</span><br><span class="line">+---------------------+----------------------------------+</span><br><span class="line">[root@controller ~]#</span><br><span class="line">#注意我的域名是自定义的，正常应该是demo</span><br></pre></td></tr></table></figure><h3 id="glance安装（2分）"><a href="#glance安装（2分）" class="headerlink" title="glance安装（2分）"></a>glance安装（2分）</h3><p>使用脚本安装glance服务。使用CentOS_6.5_x86_64_XD.qcow2文件创建名为examimage的镜像；使用openstack命令查看镜像列表；设置该镜像的标签为lastone，查询镜像详细信息。依次将操作命令和查询结果以文本形式提交到答题框。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[root@controller ~]# iaas-install-glance.sh</span><br><span class="line">[root@controller ~]# glance image-create --name &quot;testone&quot; --disk-format &quot;qcow2&quot; --container-format bare --progress &lt; /root/CentOS_6.5_x86_64_XD.qcow2 </span><br><span class="line">[=============================&gt;] 100%</span><br><span class="line">+------------------+--------------------------------------+</span><br><span class="line">| Property         | Value                                |</span><br><span class="line">+------------------+--------------------------------------+</span><br><span class="line">| checksum         | 3e565ace16066679ea363dde5411ed25     |</span><br><span class="line">| container_format | bare                                 |</span><br><span class="line">| created_at       | 2018-01-17T09:01:36Z                 |</span><br><span class="line">| disk_format      | qcow2                                |</span><br><span class="line">| id               | 3bb63ae0-3129-442b-b19f-9f66298132aa |</span><br><span class="line">| min_disk         | 0                                    |</span><br><span class="line">| min_ram          | 0                                    |</span><br><span class="line">| name             | examimage                            |</span><br><span class="line">| owner            | 0ab2dbde4f754b699e22461426cd0774     |</span><br><span class="line">| protected        | False                                |</span><br><span class="line">| size             | 283181056                            |</span><br><span class="line">| status           | active                               |</span><br><span class="line">| tags             | []                                   |</span><br><span class="line">| updated_at       | 2018-01-17T09:01:38Z                 |</span><br><span class="line">| virtual_size     | None                                 |</span><br><span class="line">| visibility       | private                              |</span><br><span class="line">+------------------+--------------------------------------+</span><br><span class="line">[root@controller ~]#  openstack image list</span><br><span class="line">+--------------------------------------+-----------+--------+</span><br><span class="line">| ID                                   | Name      | Status |</span><br><span class="line">+--------------------------------------+-----------+--------+</span><br><span class="line">| 3bb63ae0-3129-442b-b19f-9f66298132aa | examimage | active |</span><br><span class="line">+--------------------------------------+-----------+--------+</span><br><span class="line">[root@controller ~]#  openstack image set examimage --tag lastone</span><br><span class="line">[root@controller ~]#  openstack image show examimage</span><br><span class="line">+------------------+------------------------------------------------------+</span><br><span class="line">| Field            | Value                                                |</span><br><span class="line">+------------------+------------------------------------------------------+</span><br><span class="line">| checksum         | 3e565ace16066679ea363dde5411ed25                     |</span><br><span class="line">| container_format | bare                                                 |</span><br><span class="line">| created_at       | 2018-01-17T09:01:36Z                                 |</span><br><span class="line">| disk_format      | qcow2                                                |</span><br><span class="line">| file             | /v2/images/3bb63ae0-3129-442b-b19f-9f66298132aa/file |</span><br><span class="line">| id               | 3bb63ae0-3129-442b-b19f-9f66298132aa                 |</span><br><span class="line">| min_disk         | 0                                                    |</span><br><span class="line">| min_ram          | 0                                                    |</span><br><span class="line">| name             | examimage                                            |</span><br><span class="line">| owner            | 0ab2dbde4f754b699e22461426cd0774                     |</span><br><span class="line">| protected        | False                                                |</span><br><span class="line">| schema           | /v2/schemas/image                                    |</span><br><span class="line">| size             | 283181056                                            |</span><br><span class="line">| status           | active                                               |</span><br><span class="line">| tags             | lastone                                              |</span><br><span class="line">| updated_at       | 2018-01-18T01:15:18Z                                 |</span><br><span class="line">| virtual_size     | None                                                 |</span><br><span class="line">| visibility       | private                                              |</span><br><span class="line">+------------------+------------------------------------------------------+</span><br></pre></td></tr></table></figure><p>命令详解<br>–name NAME 上传完镜像在openstack中显示的名称；</p><p>–disk-format DISK_FORMAT 镜像格式；openstack支持的格式详情请看官方介绍；</p><p>–container-format CONTAINER_FORMAT 图片的容器格式，可以是ami,ari,aki,ovf,bare默认是bare</p><p>–owner TENANT_ID 那个租户可以使用此镜像</p><p>–size SIZE 这个镜像的大小</p><p>–min-disk DISK_GB 这个镜像启动最小需要的大小；</p><p>–min-ram DISK_RAM 启动这个镜像需要的最小内存；</p><p>–location IMAGE_URL 在web界面中可以使用url地址上传镜像，目前支持http协议的；</p><p>–file FILE 镜像所在本地目录；</p><p>–checksum CHECKSUM 镜像数据验证；</p><p>–is-public [True|False] 是否共享此镜像；共享后其他用户也可以使用此镜像启动instance；<br>版本2</p><p>###nova管理（2分）<br>使用脚本安装nova服务，通过nova的相关命令创建名为exam，ID为1234，内存为1024M，硬盘为20G，虚拟内核数量为2的云主机类型，查看exam的详细信息。依次将操作命令及返回结果以文本形式提交到答题框。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@controller ~]# iaas-install-nova-controller.sh /iaas-install-nova-compute.sh  nova服务是两个节点都要安装</span><br><span class="line">[root@xiandian ~]# nova flavor-create exam 1234 1024 20 2</span><br><span class="line">+------+------+-----------+------+-----------+------+-------+-------------+-----------+</span><br><span class="line">| ID   | Name | Memory_MB | Disk | Ephemeral | Swap | VCPUs | RXTX_Factor | Is_Public |</span><br><span class="line">+------+------+-----------+------+-----------+------+-------+-------------+-----------+</span><br><span class="line">| 1234 | exam | 1024      | 20   | 0         |      | 2     | 1.0         | True      |</span><br><span class="line">+------+------+-----------+------+-----------+------+-------+-------------+-----------+</span><br><span class="line">[root@xiandian ~]# nova flavor-show 1234</span><br><span class="line">+----------------------------+-------+</span><br><span class="line">| Property                   | Value |</span><br><span class="line">+----------------------------+-------+</span><br><span class="line">| OS-FLV-DISABLED:disabled   | False |</span><br><span class="line">| OS-FLV-EXT-DATA:ephemeral  | 0     |</span><br><span class="line">| disk                       | 20    |</span><br><span class="line">| extra_specs                | &#123;&#125;    |</span><br><span class="line">| id                         | 1234  |</span><br><span class="line">| name                       | exam  |</span><br><span class="line">| os-flavor-access:is_public | True  |</span><br><span class="line">| ram                        | 1024  |</span><br><span class="line">| rxtx_factor                | 1.0   |</span><br><span class="line">| swap                       |       |</span><br><span class="line">| vcpus                      | 2     |</span><br><span class="line">+----------------------------+-------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>网络创建（2分）<br>使用脚本安装neutron服务，并配置为GRE网络：</p><p>（1）创建云主机外部网络为ext-net，子网为ext-subnet，虚拟机浮动IP网段为192.168.200.0&#x2F;24，网关为192.168.200.1;</p><p>（2）创建云主机隧道网络int-net1，子网为int-subnet1，虚拟机子网IP网段为10.0.0.0&#x2F;24，网关为10.0.0.1；</p><p>（3）创建云主机隧道网络int-net2，子网为int-subnet2，虚拟机子网IP网段为10.0.1.0&#x2F;24，网关为10.0.1.1;</p><p>（4）添加名为ext-router的路由器，配置路由接口地址，完成隧道网络int-net1和外部网络ext-net的连通。</p><p>使用neutron相关命令查询子网的列表信息，并查看int-subnet1的详细信息。依次将操作命令和查询结果以文本形式提交到答题框。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@controller ~]# iaas-install-neutron-controller.sh/iaas-install-neutron-compute.sh neutron服务也是双节点</span><br><span class="line">[root@controller ~]# openstack network create --share --external \</span><br><span class="line">--provider-physical-network provider \</span><br><span class="line">--provider-network-type vlan \</span><br><span class="line">--provider-segment 1120 extnet  //vlanid 根据自己的情况来设置</span><br><span class="line"></span><br><span class="line">[root@controller ~]# openstack subnet create --network extnet \</span><br><span class="line">  --allocation-pool start=192.168.200.2,end=192.168.200.254 \</span><br><span class="line">  --dns-nameserver 1.2.4.8 --gateway 192.168.200.1 \</span><br><span class="line">  --subnet-range 192.168.200.0/24 extsubnet</span><br><span class="line">---------------------------------------------------------------------------------------------- </span><br><span class="line">[root@controller ~]# openstack network create --share \</span><br><span class="line">intnet1</span><br><span class="line"></span><br><span class="line">[root@controller ~]# openstack subnet create --network intnet1 \</span><br><span class="line">  --allocation-pool start=10.10.0.2,end=10.10.0.254 \</span><br><span class="line">  --dns-nameserver 1.2.4.8 --gateway 10.10.1.1 \</span><br><span class="line">  --subnet-range 10.10.0.0/24 intsubnet1</span><br><span class="line">----------------------------------------------------------------------------------------  </span><br><span class="line">  [root@controller ~]# openstack network create --share \</span><br><span class="line">intnet2</span><br><span class="line"></span><br><span class="line">[root@controller ~]# openstack subnet create --network intnet2 \</span><br><span class="line">  --allocation-pool start=10.10.1.2,end=10.10.1.254 \</span><br><span class="line">  --dns-nameserver 1.2.4.8 --gateway 10.10.1.1 \</span><br><span class="line">  --subnet-range 10.10.1.0/24 intsubnet2</span><br><span class="line">  </span><br><span class="line">  路由配置-----------------------------------------------------------------</span><br><span class="line">[root@controller ~]# openstack router create ext-router</span><br><span class="line"></span><br><span class="line">[root@controller ~]# openstack router set \</span><br><span class="line">--enable-snat --external-gateway extnet \</span><br><span class="line">--fixed-ip subnet=extsubnet ext-router</span><br><span class="line"></span><br><span class="line">[root@controller ~]# openstack router add subnet ext-router intsubnet1</span><br><span class="line"></span><br><span class="line">查看------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">[root@controller ~]# neutron subnet-list</span><br><span class="line"></span><br><span class="line">[root@controller ~]# neutron subnet-show 6386b9ad-c446-45ae-a947-8a44b580feaf</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>dashboard配置（1分）<br>使用脚本安装dashboard服务，使用curl命令查询<a href="http://192.168.100.10/dashboard%E3%80%82%E4%BE%9D%E6%AC%A1%E5%B0%86%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4%E5%92%8C%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E4%BB%A5%E6%96%87%E6%9C%AC%E5%BD%A2%E5%BC%8F%E6%8F%90%E4%BA%A4%E5%88%B0%E7%AD%94%E9%A2%98%E6%A1%86%E3%80%82">http://192.168.100.10/dashboard。依次将操作命令和查询结果以文本形式提交到答题框。</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://192.168.10.10/dashboard/auth/login/</span><br></pre></td></tr></table></figure><p>nfs配置文件说明：</p><p>● &#x2F;mnt&#x2F;test：为共享目录（若没有这个目录，请新建一个）。</p><p>● 10.24.200.0&#x2F;24：可以为一个网段，一个IP，也可以是域名。域名支持通配符，例如，*.qq.com。</p><p>● rw：read-write，可读写。</p><p>● ro：read-only，只读。</p><p>● sync：文件同时写入硬盘和内存。</p><p>● async：文件暂存于内存，而不是直接写入内存。</p><p>● wdelay：延迟写操作。</p><p>● no_root_squash：NFS客户端连接服务端时，如果使用的是root，那么对服务端共享的目录来说，也拥有root权限。显然开启这项是不安全的。</p><p>● root_squash：NFS客户端连接服务端时，如果使用的是root，那么对服务端共享的目录来说，拥有匿名用户权限，通常它将使用nobody或nfsnobody身份。</p><p>● all_squash：不论NFS客户端连接服务端时使用什么用户，对服务端共享的目录来说，都拥有匿名用户权限。</p><p>● anonuid：匿名用户的UID（User Identification，用户身份证明）值，可以在此处自行设定。</p><h2 id="OpenStack云平台运维"><a href="#OpenStack云平台运维" class="headerlink" title="OpenStack云平台运维"></a>OpenStack云平台运维</h2><h3 id="镜像管理"><a href="#镜像管理" class="headerlink" title="镜像管理"></a>镜像管理</h3><p>使用自己搭建的openstack云平台，使用http:&#x2F;&#x2F;<IP>&#x2F;cirros-0.3.4-x86_64-disk.img镜像，使用命令创建一个名为cirros的镜像。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source /etc/keystone/admin-openrc.sh</span><br><span class="line">glance image-create --name &quot;cirros&quot; --disk-format &quot;qcow2&quot; --container-format bare --progress &lt; /root/cirros-0.3.4-x86_64-disk.img</span><br></pre></td></tr></table></figure><h3 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h3><p>使用自己搭建的openstack云平台，创建云主机网络extnet，子网extsubnet，虚拟机网段为192.168.100.0&#x2F;24， 网关为192.168.100.1，段ID默认写100。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@controller ~]# iaas-install-neutron-controller.sh/iaas-install-neutron-compute.sh neutron服务也是双节点</span><br><span class="line">[root@controller ~]# openstack network create --share --external \</span><br><span class="line">--provider-physical-network provider \</span><br><span class="line">--provider-network-type vlan \</span><br><span class="line">--provider-segment 100 extnet  //vlanid 根据自己的情况来设置</span><br><span class="line"></span><br><span class="line">[root@controller ~]# openstack subnet create --network extnet \</span><br><span class="line">  --allocation-pool start=192.168.100.2,end=192.168.100.254 \</span><br><span class="line">  --gateway 192.168.100.1 \</span><br><span class="line">  --subnet-range 192.168.100.0/24 extsubnet</span><br><span class="line">------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><h3 id="heat模板管理"><a href="#heat模板管理" class="headerlink" title="heat模板管理"></a>heat模板管理</h3><p>使用自己搭建的openstack云平台，在&#x2F;root目录下编写模板server.yaml，创建名为“m1.flavor”、 ID 为 1234、内存为1024MB、硬盘为20GB、vcpu数量为 1的云主机类型。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">heat resource-type-list #查看资源类型</span><br><span class="line">openstack orchestration template version list  #查看可用于编排的模板版本</span><br><span class="line">vi server.yaml</span><br><span class="line">heat_template_version: 2015-04-30# 使用的heat模板版本</span><br><span class="line">description: Create Flavor# 描述信息</span><br><span class="line">resources: # 定义资源</span><br><span class="line">        flavor:# 在模板的资源部分中必须是唯一的资源ID</span><br><span class="line">         type: OS::Nova::Flavor# 资源类型，这里表示一个 Flavor 类型</span><br><span class="line">         properties:# 资源特定属性的列表。</span><br><span class="line">                name: &quot;m1.flavor&quot;# Flavor类型的名称属性</span><br><span class="line">                flavorid: &quot;1234&quot;# id属性，如果没有指定则会自动生成UUID</span><br><span class="line">                disk: 20# 磁盘大小默认是GB</span><br><span class="line">                ram: 1024# 内存大小必须是MB</span><br><span class="line">                vcpus: 1</span><br><span class="line">outputs:# 定义输出信息</span><br><span class="line">  flavor_info:# 输出信息的名称</span><br><span class="line">    description: Get the information of virtual machine type# 输出描述</span><br><span class="line">    value: &#123; get_attr: [ flavor, show ] &#125;# get_attr 从相应资源定义创建的实例在运行时解析其属性值进行输出</span><br><span class="line">heat stack-create m1.flavor -f server.yaml</span><br><span class="line">openstack stack list</span><br><span class="line">openstack stack show m1.flavor</span><br></pre></td></tr></table></figure><h3 id="云主机管理"><a href="#云主机管理" class="headerlink" title="云主机管理"></a>云主机管理</h3><p>使用自己搭建的openstack云平台，基于“cirros”镜像、flavor使用“m1.flavor”、extnet的网络，创建一台虚拟机VM1，并启动VM1。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openstack server create --flavor m1.flavor --image cirros --network extnet VM1</span><br><span class="line">openstack server show VM1</span><br></pre></td></tr></table></figure><h3 id="云平台安全策略提升"><a href="#云平台安全策略提升" class="headerlink" title="云平台安全策略提升"></a>云平台安全策略提升</h3><p>1.使用提供的云安全框架组件，将提供的OpenStack云平台的安全策略从http优化至https。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mod_ssl mod_wsgi </span><br><span class="line">vi /etc/openstack-dashboard/local_settings</span><br><span class="line">49 CSRF_COOKIE_SECURE = True  --取消注释</span><br><span class="line">50 SESSION_COOKIE_SECURE = True --取消注释</span><br><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><h3 id="swift分片存储"><a href="#swift分片存储" class="headerlink" title="swift分片存储"></a>swift分片存储</h3><p>使用自己搭建的openstack云平台，自行安装Swift服务，新建名为chinaskill的容器，将cirros-0.3.4-x86_64-disk.img镜像上传到chinaskill容器中，并设置分段存放，每一段大小为10M</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">swift post chinaskill# 创建容器 post 后面跟上容器名</span><br><span class="line">swift list# 查看容器列表</span><br><span class="line">swift list chinaskill</span><br><span class="line">swift upload chinaskill -S 10485760 cirros-0.3.4-x86_64-disk.img</span><br><span class="line">swift stat chinaskill cirros-0.3.4-x86_64-disk.img</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔迹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/3eeb.html"/>
      <url>/posts/3eeb.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
